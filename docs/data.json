{
    "project": {
        "name": "The BotPrint API",
        "description": "Documentation for the BotPrint project's API",
        "version": "0.0.1"
    },
    "files": {
        "BotsEvolved/js/modules/botPrint/ai/dtreeViz.js": {
            "name": "BotsEvolved/js/modules/botPrint/ai/dtreeViz.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/bot/attachment/actuator.js": {
            "name": "BotsEvolved/js/modules/botPrint/bot/attachment/actuator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/bot/attachment/attachment.js": {
            "name": "BotsEvolved/js/modules/botPrint/bot/attachment/attachment.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/bot/attachment/attachments.js": {
            "name": "BotsEvolved/js/modules/botPrint/bot/attachment/attachments.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/bot/attachment/sensor.js": {
            "name": "BotsEvolved/js/modules/botPrint/bot/attachment/sensor.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/bot/bot.js": {
            "name": "BotsEvolved/js/modules/botPrint/bot/bot.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/bot/chassis.js": {
            "name": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "modules": {},
            "classes": {
                "Chassis": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/bot/wiring.js": {
            "name": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "modules": {},
            "classes": {
                "Wire": 1,
                "Pin": 1,
                "Component": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/physics/arena.js": {
            "name": "BotsEvolved/js/modules/botPrint/physics/arena.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/physics/boxDebugDraw.js": {
            "name": "BotsEvolved/js/modules/botPrint/physics/boxDebugDraw.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/physics/boxWorld.js": {
            "name": "BotsEvolved/js/modules/botPrint/physics/boxWorld.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/botApp.js": {
            "name": "BotsEvolved/js/modules/botPrint/botApp.js",
            "modules": {},
            "classes": {
                "BotApp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/botPrint/botEvo.js": {
            "name": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "modules": {},
            "classes": {
                "BrainEvo": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ai/hfsm.js": {
            "name": "BotsEvolved/js/modules/shared/ai/hfsm.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/commonUtils.js": {
            "name": "BotsEvolved/js/modules/shared/common/commonUtils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/kcolor.js": {
            "name": "BotsEvolved/js/modules/shared/common/kcolor.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/map.js": {
            "name": "BotsEvolved/js/modules/shared/common/map.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/range.js": {
            "name": "BotsEvolved/js/modules/shared/common/range.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/rect.js": {
            "name": "BotsEvolved/js/modules/shared/common/rect.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/timespan.js": {
            "name": "BotsEvolved/js/modules/shared/common/timespan.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/transform.js": {
            "name": "BotsEvolved/js/modules/shared/common/transform.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/tree.js": {
            "name": "BotsEvolved/js/modules/shared/common/tree.js",
            "modules": {},
            "classes": {
                "Tree": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/utilities.js": {
            "name": "BotsEvolved/js/modules/shared/common/utilities.js",
            "modules": {},
            "classes": {
                "Utilities": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/common/vector.js": {
            "name": "BotsEvolved/js/modules/shared/common/vector.js",
            "modules": {},
            "classes": {
                "Vector": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/evo/evoSim.js": {
            "name": "BotsEvolved/js/modules/shared/evo/evoSim.js",
            "modules": {},
            "classes": {
                "EvoSim": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/geo/particles/particle.js": {
            "name": "BotsEvolved/js/modules/shared/geo/particles/particle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/geo/geometry.js": {
            "name": "BotsEvolved/js/modules/shared/geo/geometry.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/graphs/edge.js": {
            "name": "BotsEvolved/js/modules/shared/graphs/edge.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/graphs/graph.js": {
            "name": "BotsEvolved/js/modules/shared/graphs/graph.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/graphs/path.js": {
            "name": "BotsEvolved/js/modules/shared/graphs/path.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/graphs/pathset.js": {
            "name": "BotsEvolved/js/modules/shared/graphs/pathset.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/graphs/svgLoader.js": {
            "name": "BotsEvolved/js/modules/shared/graphs/svgLoader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/io/saveFile.js": {
            "name": "BotsEvolved/js/modules/shared/io/saveFile.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/threeUtils/fonts/fonts.js": {
            "name": "BotsEvolved/js/modules/shared/threeUtils/fonts/fonts.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/threeUtils/fonts/typeface-0.15.js": {
            "name": "BotsEvolved/js/modules/shared/threeUtils/fonts/typeface-0.15.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/threeUtils/modGeo.js": {
            "name": "BotsEvolved/js/modules/shared/threeUtils/modGeo.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/threeUtils/threeCam.js": {
            "name": "BotsEvolved/js/modules/shared/threeUtils/threeCam.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/threeUtils/threeFonts.js": {
            "name": "BotsEvolved/js/modules/shared/threeUtils/threeFonts.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/threeUtils/threeUtils.js": {
            "name": "BotsEvolved/js/modules/shared/threeUtils/threeUtils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/threeUtils/threeView.js": {
            "name": "BotsEvolved/js/modules/shared/threeUtils/threeView.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ui/controls.js": {
            "name": "BotsEvolved/js/modules/shared/ui/controls.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ui/mode.js": {
            "name": "BotsEvolved/js/modules/shared/ui/mode.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ui/output.js": {
            "name": "BotsEvolved/js/modules/shared/ui/output.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ui/panel.js": {
            "name": "BotsEvolved/js/modules/shared/ui/panel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ui/popup.js": {
            "name": "BotsEvolved/js/modules/shared/ui/popup.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ui/uiUtils.js": {
            "name": "BotsEvolved/js/modules/shared/ui/uiUtils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/modules/shared/ui/window.js": {
            "name": "BotsEvolved/js/modules/shared/ui/window.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/jquery-1.10.1.js": {
            "name": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/jquery-ui.js": {
            "name": "BotsEvolved/js/vendor/jquery-ui.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/jquery.gridster.js": {
            "name": "BotsEvolved/js/vendor/jquery.gridster.js",
            "modules": {},
            "classes": {
                "Coords": 1,
                "Collision": 1,
                "Draggable": 1,
                "Gridster": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/jquery.hammer.js": {
            "name": "BotsEvolved/js/vendor/jquery.hammer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/jquery.ui.touch-punch.js": {
            "name": "BotsEvolved/js/vendor/jquery.ui.touch-punch.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/processing-1.4.1.js": {
            "name": "BotsEvolved/js/vendor/processing-1.4.1.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/quadtree.js": {
            "name": "BotsEvolved/js/vendor/quadtree.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/require.js": {
            "name": "BotsEvolved/js/vendor/require.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/vendor/three.js": {
            "name": "BotsEvolved/js/vendor/three.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/app.js": {
            "name": "BotsEvolved/js/app.js",
            "modules": {},
            "classes": {
                "Time": 1,
                "App": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "BotsEvolved/js/botMain.js": {
            "name": "BotsEvolved/js/botMain.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Chassis": {
            "name": "Chassis",
            "shortname": "Chassis",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 12,
            "extends": "Tree"
        },
        "Wire": {
            "name": "Wire",
            "shortname": "Wire",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 7
        },
        "Pin": {
            "name": "Pin",
            "shortname": "Pin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 40
        },
        "Component": {
            "name": "Component",
            "shortname": "Component",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 76
        },
        "BotApp": {
            "name": "BotApp",
            "shortname": "BotApp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 7,
            "extends": "App"
        },
        "BrainEvo": {
            "name": "BrainEvo",
            "shortname": "BrainEvo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 23,
            "extends": "EvoSim"
        },
        "Tree": {
            "name": "Tree",
            "shortname": "Tree",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 8
        },
        "Utilities": {
            "name": "Utilities",
            "shortname": "Utilities",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 7
        },
        "Vector": {
            "name": "Vector",
            "shortname": "Vector",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 8,
            "description": "Reusable Vector class"
        },
        "EvoSim": {
            "name": "EvoSim",
            "shortname": "EvoSim",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/modules/shared/evo/evoSim.js",
            "line": 7
        },
        "Coords": {
            "name": "Coords",
            "shortname": "Coords",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Collision"
            ],
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 6,
            "description": "Creates objects with coordinates (x1, y1, x2, y2, cx, cy, width, height)\nto simulate DOM elements on the screen.\nCoords is used by Gridster to create a faux grid with any DOM element can\ncollide.",
            "params": [
                {
                    "name": "obj",
                    "description": "The jQuery HTMLElement or a object with: left,\ntop, width and height properties.",
                    "type": "HTMLElement|Object"
                }
            ],
            "return": {
                "description": "Coords instance.",
                "type": "Object"
            },
            "is_constructor": 1
        },
        "Collision": {
            "name": "Collision",
            "shortname": "Collision",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Gridster"
            ],
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 116,
            "description": "Detects collisions between a DOM element against other DOM elements or\nCoords objects.",
            "uses": [
                "Coords"
            ],
            "params": [
                {
                    "name": "el",
                    "description": "The jQuery wrapped HTMLElement.",
                    "type": "HTMLElement"
                },
                {
                    "name": "colliders",
                    "description": "Can be a jQuery collection\n of HTMLElements or an Array of Coords instances.",
                    "type": "HTMLElement|Array"
                },
                {
                    "name": "options",
                    "description": "An Object with all options you want to\n       overwrite:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "on_overlap_start",
                            "description": "Executes a function the first\n   time each `collider ` is overlapped.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "on_overlap_stop",
                            "description": "Executes a function when a\n   `collider` is no longer collided.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "on_overlap",
                            "description": "Executes a function when the\nmouse is moved during the collision.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Collision instance.",
                "type": "Object"
            },
            "is_constructor": 1
        },
        "Draggable": {
            "name": "Draggable",
            "shortname": "Draggable",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Gridster"
            ],
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 385,
            "description": "Basic drag implementation for DOM elements inside a container.\nProvide start/stop/drag callbacks.",
            "params": [
                {
                    "name": "el",
                    "description": "The HTMLelement that contains all the widgets\n to be dragged.",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "An Object with all options you want to\n       overwrite:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "items",
                            "description": "Define who will\n    be the draggable items. Can be a CSS Selector String or a\n    collection of HTMLElements.",
                            "type": "HTMLElement|String",
                            "optional": true
                        },
                        {
                            "name": "distance",
                            "description": "Distance in pixels after mousedown\n    the mouse must move before dragging should start.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "limit",
                            "description": "Constrains dragging to the width of\n    the container",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "offset_left",
                            "description": "Offset added to the item\n    that is being dragged.",
                            "type": "Offset_left",
                            "optional": true
                        },
                        {
                            "name": "drag",
                            "description": "Executes a callback when the mouse is\n    moved during the dragging.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "start",
                            "description": "Executes a callback when the drag\n    starts.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "stop",
                            "description": "Executes a callback when the drag stops.",
                            "type": "Number",
                            "optional": true
                        }
                    ]
                }
            ],
            "return": {
                "description": "Returns `el`.",
                "type": "Object"
            },
            "is_constructor": 1
        },
        "Gridster": {
            "name": "Gridster",
            "shortname": "Gridster",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 742,
            "uses": [
                "Draggable",
                "Collision"
            ],
            "params": [
                {
                    "name": "el",
                    "description": "The HTMLelement that contains all the widgets.",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "An Object with all options you want to\n       overwrite:",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "widget_selector",
                            "description": "Define who will\n    be the draggable widgets. Can be a CSS Selector String or a\n    collection of HTMLElements",
                            "type": "HTMLElement|String",
                            "optional": true
                        },
                        {
                            "name": "widget_margins",
                            "description": "Margin between widgets.\n    The first index for the horizontal margin (left, right) and\n    the second for the vertical margin (top, bottom).",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "widget_base_dimensions",
                            "description": "Base widget dimensions\n    in pixels. The first index for the width and the second for the\n    height.",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "extra_cols",
                            "description": "Add more columns in addition to\n    those that have been calculated.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "extra_rows",
                            "description": "Add more rows in addition to\n    those that have been calculated.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "min_cols",
                            "description": "The minimum required columns.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "max_cols",
                            "description": "The maximum columns possible (set to null\n    for no maximum).",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "min_rows",
                            "description": "The minimum required rows.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "max_size_x",
                            "description": "The maximum number of columns\n    that a widget can span.",
                            "type": "Number",
                            "optional": true
                        },
                        {
                            "name": "autogenerate_stylesheet",
                            "description": "If true, all the\n    CSS required to position all widgets in their respective columns\n    and rows will be generated automatically and injected to the\n    `<head>` of the document. You can set this to false, and write\n    your own CSS targeting rows and cols via data-attributes like so:\n    `[data-col=\"1\"] { left: 10px; }`",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "avoid_overlapped_widgets",
                            "description": "Avoid that widgets loaded\n    from the DOM can be overlapped. It is helpful if the positions were\n    bad stored in the database or if there was any conflict.",
                            "type": "Boolean",
                            "optional": true
                        },
                        {
                            "name": "serialize_params",
                            "description": "Return the data you want\n    for each widget in the serialization. Two arguments are passed:\n    `$w`: the jQuery wrapped HTMLElement, and `wgd`: the grid\n    coords object (`col`, `row`, `size_x`, `size_y`).",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "collision",
                            "description": "An Object with all options for\n    Collision class you want to overwrite. See Collision docs for\n    more info.",
                            "type": "Object",
                            "optional": true
                        },
                        {
                            "name": "draggable",
                            "description": "An Object with all options for\n    Draggable class you want to overwrite. See Draggable docs for more\n    info.",
                            "type": "Object",
                            "optional": true
                        }
                    ]
                }
            ],
            "is_constructor": 1
        },
        "Time": {
            "name": "Time",
            "shortname": "Time",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/app.js",
            "line": 9
        },
        "App": {
            "name": "App",
            "shortname": "App",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "BotsEvolved/js/app.js",
            "line": 53
        }
    },
    "classitems": [
        {
            "file": "BotsEvolved/js/modules/botPrint/ai/dtreeViz.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/attachment/actuator.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/attachment/attachment.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/attachment/attachments.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/attachment/sensor.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/bot.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 17,
            "itemtype": "method",
            "name": "init",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 49,
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "newChassis",
                "type": "Chassis"
            },
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 62,
            "itemtype": "method",
            "name": "getBot",
            "return": {
                "description": "returns parent's Bot, or undefined",
                "type": "Bot"
            },
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 71,
            "itemtype": "method",
            "name": "transformToGlobal",
            "params": [
                {
                    "name": "local",
                    "description": ""
                },
                {
                    "name": "global",
                    "description": ""
                }
            ],
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 85,
            "description": "Here there be dragons",
            "itemtype": "method",
            "name": "generateWiring",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 141,
            "itemtype": "method",
            "name": "generateAttachments",
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 190,
            "itemtype": "method",
            "name": "compileForces",
            "params": [
                {
                    "name": "forces",
                    "description": ""
                }
            ],
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 202,
            "itemtype": "method",
            "name": "compileAttachments",
            "params": [
                {
                    "name": "attachments",
                    "description": ""
                },
                {
                    "name": "query",
                    "description": ""
                }
            ],
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 219,
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "time",
                    "description": ""
                }
            ],
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 232,
            "description": "Get something relative to this chassis",
            "itemtype": "method",
            "name": "getAt",
            "params": [
                {
                    "name": "query",
                    "description": ""
                }
            ],
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 247,
            "description": "Render this bot in a 2D frame",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/chassis.js",
            "line": 291,
            "itemtype": "method",
            "name": "hover",
            "params": [
                {
                    "name": "pos",
                    "description": ""
                }
            ],
            "class": "Chassis"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Wire"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 11,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "start",
                    "description": ""
                },
                {
                    "name": "end",
                    "description": ""
                }
            ],
            "class": "Wire"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 25,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "Wire"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 44,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "settings",
                    "description": ""
                }
            ],
            "class": "Pin"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 57,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "Pin"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 80,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "settings",
                    "description": ""
                }
            ],
            "class": "Component"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 109,
            "itemtype": "method",
            "name": "compilePins",
            "params": [
                {
                    "name": "pinList",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "filter",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Component"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/bot/wiring.js",
            "line": 121,
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "context",
                    "description": ""
                }
            ],
            "class": "Component"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/physics/arena.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/physics/boxDebugDraw.js",
            "line": 1,
            "author": "Kate Compton\nModified from https://github.com/kripken/box2d.js/",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/physics/boxWorld.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 12,
            "itemtype": "method",
            "name": "init",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 44,
            "itemtype": "method",
            "name": "toggleMainMode",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 55,
            "itemtype": "method",
            "name": "openEditMode",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 68,
            "itemtype": "method",
            "name": "openArenaMode",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 79,
            "itemtype": "method",
            "name": "toggleEditMode",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 90,
            "itemtype": "method",
            "name": "openEditParts",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 100,
            "itemtype": "method",
            "name": "openEditChassis",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 109,
            "itemtype": "method",
            "name": "openLoadScreen",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 116,
            "itemtype": "method",
            "name": "closeLoadScreen",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 133,
            "itemtype": "method",
            "name": "createAndTestManyBots",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 150,
            "itemtype": "method",
            "name": "createAndTestNewBot",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 166,
            "itemtype": "method",
            "name": "initModes",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 252,
            "itemtype": "method",
            "name": "initControls",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botApp.js",
            "line": 295,
            "itemtype": "method",
            "name": "initUI",
            "class": "BotApp"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 28,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "bot",
                    "description": ""
                },
                {
                    "name": "task",
                    "description": ""
                },
                {
                    "name": "arena",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 51,
            "itemtype": "method",
            "name": "createGenome",
            "return": {
                "description": "dtree",
                "type": "DTree"
            },
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 81,
            "itemtype": "method",
            "name": "generateAction",
            "return": {
                "description": "",
                "type": "Action"
            },
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 89,
            "itemtype": "method",
            "name": "generateCondition",
            "return": {
                "description": "",
                "type": "Condition"
            },
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 98,
            "itemtype": "method",
            "name": "createIndividual",
            "params": [
                {
                    "name": "genome",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 112,
            "description": "Mutate a condition with either major or minor changes",
            "itemtype": "method",
            "name": "mutateCondition",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "majorChange",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "mutationStrength",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 147,
            "itemtype": "method",
            "name": "mutateAction",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "majorChange",
                    "description": "",
                    "type": "Boolean"
                },
                {
                    "name": "mutationStrength",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 183,
            "itemtype": "method",
            "name": "mutateNode",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "mutationIntensity",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 200,
            "itemtype": "method",
            "name": "mutateGenome",
            "params": [
                {
                    "name": "genome",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 233,
            "itemtype": "method",
            "name": "crossoverGenomes",
            "params": [
                {
                    "name": "g0",
                    "description": ""
                },
                {
                    "name": "g1",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 243,
            "description": "Test individuals one at a time",
            "itemtype": "method",
            "name": "evaluatePopulation",
            "async": 1,
            "params": [
                {
                    "name": "population",
                    "description": ""
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Array of Objects, with properties individual:Object and avgScore:Number"
            },
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/botPrint/botEvo.js",
            "line": 321,
            "itemtype": "method",
            "name": "renderScores",
            "params": [
                {
                    "name": "g",
                    "description": ""
                }
            ],
            "class": "BrainEvo"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ai/hfsm.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/commonUtils.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/kcolor.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/map.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/range.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/rect.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/timespan.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/transform.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 12,
            "itemtype": "method",
            "name": "init",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 24,
            "itemtype": "method",
            "name": "compileNodes",
            "params": [
                {
                    "name": "list",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "query",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Pushes all nodes that return true to the query onto the list."
            },
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 41,
            "description": "Severs all children from the tree, sets this.children to []",
            "itemtype": "method",
            "name": "removeChildren",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 52,
            "description": "Severs the node from the tree.",
            "itemtype": "method",
            "name": "removeParent",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 61,
            "itemtype": "method",
            "name": "setParent",
            "params": [
                {
                    "name": "parent",
                    "description": "",
                    "type": "Tree"
                }
            ],
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 79,
            "itemtype": "method",
            "name": "getChildren",
            "return": {
                "description": "children",
                "type": "Array"
            },
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 87,
            "itemtype": "method",
            "name": "debugPrint",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 105,
            "itemtype": "method",
            "name": "reduceDown",
            "params": [
                {
                    "name": "f",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "base",
                    "description": ""
                }
            ],
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 123,
            "itemtype": "method",
            "name": "toString",
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/tree.js",
            "line": 130,
            "itemtype": "method",
            "name": "generateTree",
            "params": [
                {
                    "name": "initNode",
                    "description": ""
                }
            ],
            "class": "Tree"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 13,
            "itemtype": "attribute",
            "name": "words",
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 17,
            "itemtype": "property",
            "name": "words.animals",
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 21,
            "itemtype": "property",
            "name": "worlds.moods",
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 25,
            "itemtype": "property",
            "name": "words.colors",
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 29,
            "itemtype": "method",
            "name": "words.getRandomPhrase",
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 37,
            "itemtype": "method",
            "name": "arrayToString",
            "params": [
                {
                    "name": "array",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 51,
            "itemtype": "method",
            "name": "inSquareBrackets",
            "params": [
                {
                    "name": "s",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns the input string with brackets around out."
            },
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 60,
            "itemtype": "method",
            "name": "getSpacer",
            "params": [
                {
                    "name": "count",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns a string of spaces count long"
            },
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 72,
            "itemtype": "method",
            "name": "sCurve",
            "params": [
                {
                    "name": "v",
                    "description": ""
                },
                {
                    "name": "iterations",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 87,
            "itemtype": "method",
            "name": "within",
            "params": [
                {
                    "name": "val",
                    "description": ""
                },
                {
                    "name": "min",
                    "description": ""
                },
                {
                    "name": "max",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns whether val is between min and max",
                "type": "Boolean"
            },
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 98,
            "description": "The weight is determined by the function getWeight(index, item, list)",
            "itemtype": "method",
            "name": "getWeightedRandomIndex",
            "params": [
                {
                    "name": "array",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 127,
            "description": "Get a random element from an Array",
            "itemtype": "method",
            "name": "getRandom",
            "params": [
                {
                    "name": "array",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 136,
            "description": "Get a random index from an Array",
            "itemtype": "method",
            "name": "getRandomIndex",
            "params": [
                {
                    "name": "array",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 145,
            "description": "Get a random key from an Object",
            "itemtype": "method",
            "name": "getRandomKey",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 154,
            "description": "Returns val if it is within upper and lower.\nReturns the bound if val passes outside",
            "itemtype": "method",
            "name": "constrain",
            "params": [
                {
                    "name": "val",
                    "description": ""
                },
                {
                    "name": "lowerBound",
                    "description": ""
                },
                {
                    "name": "upperBound",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 170,
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "start",
                    "description": ""
                },
                {
                    "name": "end",
                    "description": ""
                },
                {
                    "name": "percent",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 180,
            "itemtype": "method",
            "name": "lerpAngles",
            "params": [
                {
                    "name": "start",
                    "description": ""
                },
                {
                    "name": "end",
                    "description": ""
                },
                {
                    "name": "percent",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 190,
            "description": "Return a random, possibly between two numbers",
            "itemtype": "method",
            "name": "random",
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 205,
            "itemtype": "method",
            "name": "roundNumber",
            "params": [
                {
                    "name": "num",
                    "description": ""
                },
                {
                    "name": "places",
                    "description": "",
                    "optional": true
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/utilities.js",
            "line": 219,
            "itemtype": "method",
            "name": "angleBetween",
            "params": [
                {
                    "name": "a",
                    "description": ""
                },
                {
                    "name": "b",
                    "description": ""
                }
            ],
            "class": "Utilities"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 14,
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 46,
            "itemtype": "method",
            "name": "clone",
            "return": {
                "description": "this",
                "type": "Vector"
            },
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 54,
            "description": "Copies x, y, and z from this into v.",
            "itemtype": "method",
            "name": "cloneInto",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 65,
            "itemtype": "method",
            "name": "addMultiple",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 76,
            "itemtype": "method",
            "name": "addPolar",
            "params": [
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "theta",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 86,
            "itemtype": "method",
            "name": "addSpherical",
            "params": [
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "theta",
                    "description": ""
                },
                {
                    "name": "phi",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 98,
            "itemtype": "method",
            "name": "addRotated",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "theta",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 112,
            "itemtype": "method",
            "name": "setToPolar",
            "params": [
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "theta",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 122,
            "itemtype": "method",
            "name": "setToCylindrical",
            "params": [
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "theta",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 134,
            "itemtype": "method",
            "name": "setToPolarOffset",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "theta",
                    "description": ""
                },
                {
                    "name": "r",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 146,
            "itemtype": "method",
            "name": "setToMultiple",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 157,
            "itemtype": "method",
            "name": "setToLerp",
            "params": [
                {
                    "name": "v0",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "v1",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 170,
            "itemtype": "method",
            "name": "setToAddMultiple",
            "params": [
                {
                    "name": "v0",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "m0",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "v1",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "m1",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 183,
            "itemtype": "method",
            "name": "setToDifference",
            "params": [
                {
                    "name": "v0",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "v1",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 194,
            "itemtype": "method",
            "name": "setTo",
            "params": [
                {
                    "name": "x",
                    "description": ""
                },
                {
                    "name": "y",
                    "description": ""
                },
                {
                    "name": "z",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 220,
            "itemtype": "method",
            "name": "setScreenPosition",
            "params": [
                {
                    "name": "g",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 231,
            "itemtype": "method",
            "name": "magnitude",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 238,
            "itemtype": "method",
            "name": "normalize",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 245,
            "itemtype": "method",
            "name": "constrainMagnitude",
            "params": [
                {
                    "name": "min",
                    "description": ""
                },
                {
                    "name": "max",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 258,
            "itemtype": "method",
            "name": "getDistanceTo",
            "params": [
                {
                    "name": "p",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 269,
            "itemtype": "method",
            "name": "getDistanceToIgnoreZ",
            "params": [
                {
                    "name": "p",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 280,
            "itemtype": "method",
            "name": "getAngleTo",
            "params": [
                {
                    "name": "p",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 295,
            "itemtype": "method",
            "name": "dot",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 303,
            "itemtype": "method",
            "name": "getAngleBetween",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 315,
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 325,
            "itemtype": "method",
            "name": "sub",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 335,
            "itemtype": "method",
            "name": "mult",
            "params": [
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 345,
            "itemtype": "method",
            "name": "div",
            "params": [
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 355,
            "itemtype": "method",
            "name": "getOffsetTo",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 363,
            "itemtype": "method",
            "name": "getAngle",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 370,
            "itemtype": "method",
            "name": "rotate",
            "params": [
                {
                    "name": "theta",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 383,
            "description": "Lerp a vector!",
            "itemtype": "method",
            "name": "lerp",
            "params": [
                {
                    "name": "otherVector",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "percent",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 394,
            "itemtype": "method",
            "name": "isValid",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 401,
            "description": "method translateTo",
            "params": [
                {
                    "name": "g",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 409,
            "description": "method bezier",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "c0",
                    "description": ""
                },
                {
                    "name": "c1",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 419,
            "description": "method bezierTo",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "c0",
                    "description": ""
                },
                {
                    "name": "c1",
                    "description": ""
                },
                {
                    "name": "p",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 430,
            "description": "method bezierWithRelativeControlPoints",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "p",
                    "description": ""
                },
                {
                    "name": "c0",
                    "description": ""
                },
                {
                    "name": "c1",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 442,
            "itemtype": "method",
            "name": "vertex",
            "params": [
                {
                    "name": "g",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 450,
            "itemtype": "method",
            "name": "offsetVertex",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "offset",
                    "description": ""
                },
                {
                    "name": "m",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 462,
            "itemtype": "method",
            "name": "drawCircle",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "radius",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 471,
            "itemtype": "method",
            "name": "drawLineTo",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 480,
            "itemtype": "method",
            "name": "drawLerpedLineTo",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "startLerp",
                    "description": ""
                },
                {
                    "name": "endLerp",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 494,
            "itemtype": "method",
            "name": "drawAngle",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "v",
                    "description": "",
                    "type": "Vector"
                },
                {
                    "name": "m",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 504,
            "itemtype": "method",
            "name": "drawAngle",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "theta",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 514,
            "itemtype": "method",
            "name": "drawAngleBall",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "theta",
                    "description": ""
                },
                {
                    "name": "radius",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 525,
            "itemtype": "method",
            "name": "drawArc",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "r",
                    "description": ""
                },
                {
                    "name": "theta0",
                    "description": ""
                },
                {
                    "name": "theta1",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 541,
            "itemtype": "method",
            "name": "drawText",
            "params": [
                {
                    "name": "g",
                    "description": ""
                },
                {
                    "name": "s",
                    "description": ""
                },
                {
                    "name": "xOffset",
                    "description": ""
                },
                {
                    "name": "yOffset",
                    "description": ""
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 552,
            "itemtype": "method",
            "name": "toThreeVector",
            "return": {
                "description": "",
                "type": "THREE.Vector3"
            },
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 560,
            "itemtype": "method",
            "name": "toSVG",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 567,
            "itemtype": "method",
            "name": "toB2D",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 574,
            "itemtype": "method",
            "name": "toString",
            "params": [
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "2"
                }
            ],
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/common/vector.js",
            "line": 585,
            "itemtype": "method",
            "name": "invalidToString",
            "class": "Vector"
        },
        {
            "file": "BotsEvolved/js/modules/shared/evo/evoSim.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "EvoSim"
        },
        {
            "file": "BotsEvolved/js/modules/shared/evo/evoSim.js",
            "line": 18,
            "description": "Create a population with random genomes",
            "itemtype": "method",
            "name": "createPopulation",
            "params": [
                {
                    "name": "count",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "population with count members",
                "type": "Array"
            },
            "class": "EvoSim"
        },
        {
            "file": "BotsEvolved/js/modules/shared/evo/evoSim.js",
            "line": 37,
            "itemtype": "method",
            "name": "runGenerations",
            "params": [
                {
                    "name": "generationCount",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "EvoSim"
        },
        {
            "file": "BotsEvolved/js/modules/shared/evo/evoSim.js",
            "line": 55,
            "itemtype": "method",
            "name": "runGeneration",
            "params": [
                {
                    "name": "evoRun",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "crossOverPct",
                    "description": "(0-1)",
                    "type": "Number"
                },
                {
                    "name": "generations",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "currentGeneration",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "{Number",
                    "description": "generationCount"
                },
                {
                    "name": "population",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "EvoSim"
        },
        {
            "file": "BotsEvolved/js/modules/shared/geo/particles/particle.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/geo/geometry.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/graphs/edge.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/graphs/graph.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/graphs/path.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/graphs/pathset.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/graphs/svgLoader.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/io/saveFile.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/threeUtils/fonts/fonts.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/threeUtils/fonts/typeface-0.15.js",
            "line": 1,
            "description": "typeface.js, version 0.15 | typefacejs.neocracy.org\nCopyright (c) 2008 - 2009, David Chester davidchester@gmx.net \nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/threeUtils/modGeo.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/threeUtils/threeCam.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/threeUtils/threeFonts.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/threeUtils/threeUtils.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/threeUtils/threeView.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/controls.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/mode.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/output.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/panel.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/popup.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/popup.js",
            "line": 4,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/uiUtils.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/uiUtils.js",
            "line": 4,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/modules/shared/ui/window.js",
            "line": 1,
            "author": "Kate Compton",
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1286,
            "description": "For feature detection",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to test for native support",
                    "type": "Function"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1294,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1314,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1323,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1344,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied if the test fails",
                    "type": "Function"
                },
                {
                    "name": "test",
                    "description": "The result of a test. If true, null will be set as the handler in leiu of the specified handler",
                    "type": "Boolean"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1364,
            "description": "Fetches boolean attributes by node",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1377,
            "description": "Fetches attributes without interpolation\nhttp://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1388,
            "description": "Uses defaultValue to retrieve value in IE6/7",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1402,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns -1 if a precedes b, 1 if a follows b"
            },
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1431,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1442,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1453,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1475,
            "description": "Detect xml",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1489,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1927,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-1.10.1.js",
            "line": 1956,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 5447,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 5448,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 5449,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 5652,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 5653,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 5654,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 5999,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 6000,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery-ui.js",
            "line": 6001,
            "class": "Coords"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 823,
            "description": "Disables dragging.",
            "itemtype": "method",
            "name": "disable",
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 836,
            "description": "Enables dragging.",
            "itemtype": "method",
            "name": "enable",
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 848,
            "description": "Add a new widget to the grid.",
            "itemtype": "method",
            "name": "add_widget",
            "params": [
                {
                    "name": "html",
                    "description": "The string representing the HTML of the widget\n or the HTMLElement.",
                    "type": "String|HTMLElement"
                },
                {
                    "name": "size_x",
                    "description": "The nº of rows the widget occupies horizontally.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "size_y",
                    "description": "The nº of columns the widget occupies vertically.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "col",
                    "description": "The column the widget should start in.",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "row",
                    "description": "The row the widget should start in.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the jQuery wrapped HTMLElement representing.\n the widget that was just created.",
                "type": "HTMLElement"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 898,
            "description": "Change the size of a widget.",
            "itemtype": "method",
            "name": "resize_widget",
            "params": [
                {
                    "name": "$widget",
                    "description": "The jQuery wrapped HTMLElement\n representing the widget.",
                    "type": "HTMLElement"
                },
                {
                    "name": "size_x",
                    "description": "The number of columns that will occupy the widget.",
                    "type": "Number"
                },
                {
                    "name": "size_y",
                    "description": "The number of rows that will occupy the widget.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "Function executed when the widget is removed.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns $widget.",
                "type": "HTMLElement"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1035,
            "description": "Move down widgets in cells represented by the arguments col, row, size_x,\nsize_y",
            "itemtype": "method",
            "name": "empty_cells",
            "params": [
                {
                    "name": "col",
                    "description": "The column where the group of cells begin.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row where the group of cells begin.",
                    "type": "Number"
                },
                {
                    "name": "size_x",
                    "description": "The number of columns that the group of cells\noccupy.",
                    "type": "Number"
                },
                {
                    "name": "size_y",
                    "description": "The number of rows that the group of cells\noccupy.",
                    "type": "Number"
                },
                {
                    "name": "$exclude",
                    "description": "Exclude widgets from being moved.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1070,
            "description": "Move up widgets below cells represented by the arguments col, row, size_x,\nsize_y.",
            "itemtype": "method",
            "name": "remove_empty_cells",
            "params": [
                {
                    "name": "col",
                    "description": "The column where the group of cells begin.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row where the group of cells begin.",
                    "type": "Number"
                },
                {
                    "name": "size_x",
                    "description": "The number of columns that the group of cells\noccupy.",
                    "type": "Number"
                },
                {
                    "name": "size_y",
                    "description": "The number of rows that the group of cells\noccupy.",
                    "type": "Number"
                },
                {
                    "name": "exclude",
                    "description": "Exclude widgets from being moved.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1102,
            "description": "Get the most left column below to add a new widget.",
            "itemtype": "method",
            "name": "next_position",
            "params": [
                {
                    "name": "size_x",
                    "description": "The nº of rows the widget occupies horizontally.",
                    "type": "Number"
                },
                {
                    "name": "size_y",
                    "description": "The nº of columns the widget occupies vertically.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns a grid coords object representing the future\n widget coords.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1145,
            "description": "Remove a widget from the grid.",
            "itemtype": "method",
            "name": "remove_widget",
            "params": [
                {
                    "name": "el",
                    "description": "The jQuery wrapped HTMLElement you want to remove.",
                    "type": "HTMLElement"
                },
                {
                    "name": "silent",
                    "description": "If true, widgets below the removed one\nwill not move up. If a Function is passed it will be used as callback.",
                    "type": "Boolean|Function"
                },
                {
                    "name": "callback",
                    "description": "Function executed when the widget is removed.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1190,
            "description": "Remove all widgets from the grid.",
            "itemtype": "method",
            "name": "remove_all_widgets",
            "params": [
                {
                    "name": "callback",
                    "description": "Function executed for each widget removed.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1206,
            "description": "Returns a serialized array of the widgets in the grid.",
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "$widgets",
                    "description": "The collection of jQuery wrapped\n HTMLElements you want to serialize. If no argument is passed all widgets\n will be serialized.",
                    "type": "HTMLElement",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns an Array of Objects with the data specified in\n the serialize_params option.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1228,
            "description": "Returns a serialized array of the widgets that have changed their\n position.",
            "itemtype": "method",
            "name": "serialize_changed",
            "return": {
                "description": "Returns an Array of Objects with the data specified in\n the serialize_params option.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1241,
            "description": "Creates the grid coords object representing the widget a add it to the\nmapped array of positions.",
            "itemtype": "method",
            "name": "register_widget",
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1284,
            "description": "Update in the mapped array of positions the value of cells represented by\nthe grid coords object passed in the `grid_data` param.",
            "params": [
                {
                    "name": "grid_data",
                    "description": "The grid coords object representing the cells\n to update in the mapped array.",
                    "type": "Object"
                },
                {
                    "name": "value",
                    "description": "Pass `false` or the jQuery wrapped\n HTMLElement, depends if you want to delete an existing position or add\n a new one.",
                    "type": "HTMLElement|Boolean"
                }
            ],
            "itemtype": "method",
            "name": "update_widget_position",
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1305,
            "description": "Remove a widget from the mapped array of positions.",
            "itemtype": "method",
            "name": "remove_from_gridmap",
            "params": [
                {
                    "name": "grid_data",
                    "description": "The grid coords object representing the cells\n to update in the mapped array.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1318,
            "description": "Add a widget to the mapped array of positions.",
            "itemtype": "method",
            "name": "add_to_gridmap",
            "params": [
                {
                    "name": "grid_data",
                    "description": "The grid coords object representing the cells\n to update in the mapped array.",
                    "type": "Object"
                },
                {
                    "name": "value",
                    "description": "The value to set in the specified\n position .",
                    "type": "HTMLElement|Boolean"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1340,
            "description": "Make widgets draggable.",
            "uses": [
                "Draggable"
            ],
            "itemtype": "method",
            "name": "draggable",
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1379,
            "description": "This function is executed when the player begins to be dragged.",
            "itemtype": "method",
            "name": "on_start_drag",
            "params": [
                {
                    "name": "event",
                    "description": "The original browser event",
                    "type": "Event"
                },
                {
                    "name": "ui",
                    "description": "A prepared ui object.",
                    "type": "Object"
                }
            ],
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1430,
            "description": "This function is executed when the player is being dragged.",
            "itemtype": "method",
            "name": "on_drag",
            "params": [
                {
                    "name": "event",
                    "description": "The original browser event",
                    "type": "Event"
                },
                {
                    "name": "ui",
                    "description": "A prepared ui object.",
                    "type": "Object"
                }
            ],
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1473,
            "description": "This function is executed when the player stops being dragged.",
            "itemtype": "method",
            "name": "on_stop_drag",
            "params": [
                {
                    "name": "event",
                    "description": "The original browser event",
                    "type": "Event"
                },
                {
                    "name": "ui",
                    "description": "A prepared ui object.",
                    "type": "Object"
                }
            ],
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1534,
            "description": "Executes the callbacks passed as arguments when a column begins to be\noverlapped or stops being overlapped.",
            "params": [
                {
                    "name": "start_callback",
                    "description": "Function executed when a new column\n begins to be overlapped. The column is passed as first argument.",
                    "type": "Function"
                },
                {
                    "name": "stop_callback",
                    "description": "Function executed when a column stops\n being overlapped. The column is passed as first argument.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "on_overlapped_column_change",
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1574,
            "description": "Executes the callbacks passed as arguments when a row starts to be\noverlapped or stops being overlapped.",
            "params": [
                {
                    "name": "start_callback",
                    "description": "Function executed when a new row begins\n to be overlapped. The row is passed as first argument.",
                    "type": "Function"
                },
                {
                    "name": "end_callback",
                    "description": "Function executed when a row stops being\n overlapped. The row is passed as first argument.",
                    "type": "Function"
                }
            ],
            "itemtype": "method",
            "name": "on_overlapped_row_change",
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1610,
            "description": "Sets the current position of the player",
            "params": [
                {
                    "name": "col",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "no_player",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "itemtype": "method",
            "name": "set_player",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1663,
            "description": "See which of the widgets in the $widgets param collection can go to\na upper row and which not.",
            "itemtype": "method",
            "name": "widgets_contraints",
            "params": [
                {
                    "name": "$widgets",
                    "description": "A jQuery wrapped collection of\nHTMLElements.",
                    "type": "JQuery"
                }
            ],
            "return": {
                "description": "Returns a literal Object with two keys: `can_go_up` &\n`can_not_go_up`. Each contains a set of HTMLElements.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1699,
            "description": "Sorts an Array of grid coords objects (representing the grid coords of\neach widget) in ascending way.",
            "itemtype": "method",
            "name": "sort_by_row_asc",
            "params": [
                {
                    "name": "widgets",
                    "description": "Array of grid coords objects",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the array sorted.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1724,
            "description": "Sorts an Array of grid coords objects (representing the grid coords of\neach widget) placing first the empty cells upper left.",
            "itemtype": "method",
            "name": "sort_by_row_and_col_asc",
            "params": [
                {
                    "name": "widgets",
                    "description": "Array of grid coords objects",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the array sorted.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1744,
            "description": "Sorts an Array of grid coords objects by column (representing the grid\ncoords of each widget) in ascending way.",
            "itemtype": "method",
            "name": "sort_by_col_asc",
            "params": [
                {
                    "name": "widgets",
                    "description": "Array of grid coords objects",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the array sorted.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1764,
            "description": "Sorts an Array of grid coords objects (representing the grid coords of\neach widget) in descending way.",
            "itemtype": "method",
            "name": "sort_by_row_desc",
            "params": [
                {
                    "name": "widgets",
                    "description": "Array of grid coords objects",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns the array sorted.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1783,
            "description": "Sorts an Array of grid coords objects (representing the grid coords of\neach widget) in descending way.",
            "itemtype": "method",
            "name": "manage_movements",
            "params": [
                {
                    "name": "$widgets",
                    "description": "A jQuery collection of HTMLElements\n representing the widgets you want to move.",
                    "type": "JQuery"
                },
                {
                    "name": "to_col",
                    "description": "The column to which we want to move the widgets.",
                    "type": "Number"
                },
                {
                    "name": "to_row",
                    "description": "The row to which we want to move the widgets.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1828,
            "description": "Determines if there is a widget in the row and col given. Or if the\nHTMLElement passed as first argument is the player.",
            "itemtype": "method",
            "name": "is_player",
            "params": [
                {
                    "name": "col_or_el",
                    "description": "A jQuery wrapped collection of\nHTMLElements.",
                    "type": "Number|HTMLElement"
                },
                {
                    "name": "row",
                    "description": "The column to which we want to move the widgets.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1845,
            "description": "Determines if the widget that is being dragged is currently over the row\nand col given.",
            "itemtype": "method",
            "name": "is_player_in",
            "params": [
                {
                    "name": "col",
                    "description": "The column to check.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1860,
            "description": "Determines if the placeholder is currently over the row and col given.",
            "itemtype": "method",
            "name": "is_placeholder_in",
            "params": [
                {
                    "name": "col",
                    "description": "The column to check.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1874,
            "description": "Determines if the placeholder is currently over the column given.",
            "itemtype": "method",
            "name": "is_placeholder_in_col",
            "params": [
                {
                    "name": "col",
                    "description": "The column to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1887,
            "description": "Determines if the cell represented by col and row params is empty.",
            "itemtype": "method",
            "name": "is_empty",
            "params": [
                {
                    "name": "col",
                    "description": "The column to check.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1908,
            "description": "Determines if the cell represented by col and row params is occupied.",
            "itemtype": "method",
            "name": "is_occupied",
            "params": [
                {
                    "name": "col",
                    "description": "The column to check.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1928,
            "description": "Determines if there is a widget in the cell represented by col/row params.",
            "itemtype": "method",
            "name": "is_widget",
            "params": [
                {
                    "name": "col",
                    "description": "The column to check.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns false if there is no widget,\nelse returns the jQuery HTMLElement",
                "type": "Boolean|HTMLElement"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1953,
            "description": "Determines if there is a widget in the cell represented by col/row\nparams and if this is under the widget that is being dragged.",
            "itemtype": "method",
            "name": "is_widget_under_player",
            "params": [
                {
                    "name": "col",
                    "description": "The column to check.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to check.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns true or false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1970,
            "description": "Get widgets overlapping with the player or with the object passed\nrepresenting the grid cells.",
            "itemtype": "method",
            "name": "get_widgets_under_player",
            "return": {
                "description": "Returns a jQuery collection of HTMLElements",
                "type": "HTMLElement"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 1993,
            "description": "Put placeholder at the row and column specified.",
            "itemtype": "method",
            "name": "set_placeholder",
            "params": [
                {
                    "name": "col",
                    "description": "The column to which we want to move the\n placeholder.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to which we want to move the\n placeholder.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2052,
            "description": "Determines whether the player can move to a position above.",
            "itemtype": "method",
            "name": "can_go_player_up",
            "params": [
                {
                    "name": "widget_grid_data",
                    "description": "The actual grid coords object of the\n player.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the player can be moved to an upper row\n returns the row number, else returns false.",
                "type": "Number|Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2103,
            "description": "Determines whether a widget can move to a position above.",
            "itemtype": "method",
            "name": "can_go_widget_up",
            "params": [
                {
                    "name": "widget_grid_data",
                    "description": "The actual grid coords object of the\n widget we want to check.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "If the widget can be moved to an upper row\n returns the row number, else returns false.",
                "type": "Number|Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2160,
            "description": "Search a valid row for the widget represented by `widget_grid_data' in\nthe `upper_rows` array. Iteration starts from row specified in `min_row`.",
            "itemtype": "method",
            "name": "get_valid_rows",
            "params": [
                {
                    "name": "widget_grid_data",
                    "description": "The actual grid coords object of the\n player.",
                    "type": "Object"
                },
                {
                    "name": "upper_rows",
                    "description": "An array with columns as index and arrays\n of valid rows as values.",
                    "type": "Array"
                },
                {
                    "name": "min_row",
                    "description": "The upper row from which the iteration will start.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the upper row valid from the `upper_rows`\n for the widget in question.",
                "type": "Number|Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2237,
            "description": "Get widgets overlapping with the player.",
            "itemtype": "method",
            "name": "get_widgets_overlapped",
            "return": {
                "description": "Returns a jQuery collection of HTMLElements.",
                "type": "JQuery"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2269,
            "description": "This callback is executed when the player begins to collide with a column.",
            "itemtype": "method",
            "name": "on_start_overlapping_column",
            "params": [
                {
                    "name": "col",
                    "description": "The collided column.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns a jQuery collection of HTMLElements.",
                "type": "JQuery"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2281,
            "description": "A callback executed when the player begins to collide with a row.",
            "itemtype": "method",
            "name": "on_start_overlapping_row",
            "params": [
                {
                    "name": "row",
                    "description": "The collided row.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns a jQuery collection of HTMLElements.",
                "type": "JQuery"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2293,
            "description": "A callback executed when the the player ends to collide with a column.",
            "itemtype": "method",
            "name": "on_stop_overlapping_column",
            "params": [
                {
                    "name": "col",
                    "description": "The collided row.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns a jQuery collection of HTMLElements.",
                "type": "JQuery"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2311,
            "description": "This callback is executed when the player ends to collide with a row.",
            "itemtype": "method",
            "name": "on_stop_overlapping_row",
            "params": [
                {
                    "name": "row",
                    "description": "The collided row.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns a jQuery collection of HTMLElements.",
                "type": "JQuery"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2331,
            "description": "Move a widget to a specific row. The cell or cells must be empty.\nIf the widget has widgets below, all of these widgets will be moved also\nif they can.",
            "itemtype": "method",
            "name": "move_widget_to",
            "params": [
                {
                    "name": "$widget",
                    "description": "The jQuery wrapped HTMLElement of the\nwidget is going to be moved.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2374,
            "description": "Move up the specified widget and all below it.",
            "itemtype": "method",
            "name": "move_widget_up",
            "params": [
                {
                    "name": "$widget",
                    "description": "The widget you want to move.",
                    "type": "HTMLElement"
                },
                {
                    "name": "y_units",
                    "description": "The number of cells that the widget has to move.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2422,
            "description": "Move down the specified widget and all below it.",
            "itemtype": "method",
            "name": "move_widget_down",
            "params": [
                {
                    "name": "$widget",
                    "description": "The jQuery object representing the widget\n you want to move.",
                    "type": "JQuery"
                },
                {
                    "name": "y_units",
                    "description": "The number of cells that the widget has to move.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2468,
            "description": "Check if the widget can move to the specified row, else returns the\nupper row possible.",
            "itemtype": "method",
            "name": "can_go_up_to_row",
            "params": [
                {
                    "name": "widget_grid_data",
                    "description": "The current grid coords object of the\n widget.",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "The target column.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The target row.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the row number if the widget can move\n to the target position, else returns false.",
                "type": "Boolean|Number"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2559,
            "description": "Get widgets below a widget.",
            "itemtype": "method",
            "name": "widgets_below",
            "params": [
                {
                    "name": "$el",
                    "description": "The jQuery wrapped HTMLElement.",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "A jQuery collection of HTMLElements.",
                "type": "JQuery"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2586,
            "description": "Update the array of mapped positions with the new player position.",
            "itemtype": "method",
            "name": "set_cells_player_occupies",
            "params": [
                {
                    "name": "col",
                    "description": "The new player col.",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "The new player row.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2603,
            "description": "Remove from the array of mapped positions the reference to the player.",
            "itemtype": "method",
            "name": "empty_cells_player_occupies",
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2643,
            "description": "Check if it's possible to move a widget to a specific col/row. It takes\ninto account the dimensions (`size_y` and `size_x` attrs. of the grid\n coords object) the widget occupies.",
            "itemtype": "method",
            "name": "can_move_to",
            "params": [
                {
                    "name": "widget_grid_data",
                    "description": "The grid coords object that represents\n the widget.",
                    "type": "Object"
                },
                {
                    "name": "col",
                    "description": "The col to check.",
                    "type": "Object"
                },
                {
                    "name": "row",
                    "description": "The row to check.",
                    "type": "Object"
                },
                {
                    "name": "max_row",
                    "description": "The max row allowed.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns true if all cells are empty, else return false.",
                "type": "Boolean"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2688,
            "description": "Given the leftmost column returns all columns that are overlapping\n with the player.",
            "itemtype": "method",
            "name": "get_targeted_columns",
            "params": [
                {
                    "name": "from_col",
                    "description": "The leftmost column.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns an array with column numbers.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2707,
            "description": "Given the upper row returns all rows that are overlapping with the player.",
            "itemtype": "method",
            "name": "get_targeted_rows",
            "params": [
                {
                    "name": "from_row",
                    "description": "The upper row.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns an array with row numbers.",
                "type": "Array"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2724,
            "description": "Get all columns and rows that a widget occupies.",
            "itemtype": "method",
            "name": "get_cells_occupied",
            "params": [
                {
                    "name": "el_grid_data",
                    "description": "The grid coords object of the widget.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns an object like `{ cols: [], rows: []}`.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2752,
            "description": "Iterate over the cells occupied by a widget executing a function for\neach one.",
            "itemtype": "method",
            "name": "for_each_cell_occupied",
            "params": [
                {
                    "name": "el_grid_data",
                    "description": "The grid coords object that represents the\n widget.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to execute on each column\n iteration. Column and row are passed as arguments.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2773,
            "description": "Iterate over the columns occupied by a widget executing a function for\neach one.",
            "itemtype": "method",
            "name": "for_each_column_occupied",
            "params": [
                {
                    "name": "el_grid_data",
                    "description": "The grid coords object that represents\n the widget.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to execute on each column\n iteration. The column number is passed as first argument.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2792,
            "description": "Iterate over the rows occupied by a widget executing a function for\neach one.",
            "itemtype": "method",
            "name": "for_each_row_occupied",
            "params": [
                {
                    "name": "el_grid_data",
                    "description": "The grid coords object that represents\n the widget.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The function to execute on each column\n iteration. The row number is passed as first argument.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2859,
            "description": "Iterate over each widget above the column and row specified.",
            "itemtype": "method",
            "name": "for_each_widget_above",
            "params": [
                {
                    "name": "col",
                    "description": "The column to start iterating.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to start iterating.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "The function to execute on each widget\n iteration. The value of `this` inside the function is the jQuery\n wrapped HTMLElement.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2876,
            "description": "Iterate over each widget below the column and row specified.",
            "itemtype": "method",
            "name": "for_each_widget_below",
            "params": [
                {
                    "name": "col",
                    "description": "The column to start iterating.",
                    "type": "Number"
                },
                {
                    "name": "row",
                    "description": "The row to start iterating.",
                    "type": "Number"
                },
                {
                    "name": "callback",
                    "description": "The function to execute on each widget\n iteration. The value of `this` inside the function is the jQuery wrapped\n HTMLElement.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster Class.",
                "type": "Class"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2893,
            "description": "Returns the highest occupied cell in the grid.",
            "itemtype": "method",
            "name": "get_highest_occupied_cell",
            "return": {
                "description": "Returns an object with `col` and `row` numbers.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2951,
            "description": "Set the current height of the parent grid.",
            "itemtype": "method",
            "name": "set_dom_grid_height",
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 2964,
            "description": "It generates the neccessary styles to position the widgets.",
            "itemtype": "method",
            "name": "generate_stylesheet",
            "params": [
                {
                    "name": "rows",
                    "description": "Number of columns.",
                    "type": "Number"
                },
                {
                    "name": "cols",
                    "description": "Number of rows.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3033,
            "description": "Injects the given CSS as string to the head of the document.",
            "itemtype": "method",
            "name": "add_style_tag",
            "params": [
                {
                    "name": "css",
                    "description": "The styles to apply.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3059,
            "description": "Remove the style tag with the associated id from the head of the document",
            "itemtype": "method",
            "name": "remove_style_tag",
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3070,
            "description": "Generates a faux grid to collide with it when a widget is dragged and\ndetect row or column that we want to go.",
            "itemtype": "method",
            "name": "generate_faux_grid",
            "params": [
                {
                    "name": "rows",
                    "description": "Number of columns.",
                    "type": "Number"
                },
                {
                    "name": "cols",
                    "description": "Number of rows.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3094,
            "description": "Add cell to the faux grid.",
            "itemtype": "method",
            "name": "add_faux_cell",
            "params": [
                {
                    "name": "row",
                    "description": "The row for the new faux cell.",
                    "type": "Number"
                },
                {
                    "name": "col",
                    "description": "The col for the new faux cell.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3125,
            "description": "Add rows to the faux grid.",
            "itemtype": "method",
            "name": "add_faux_rows",
            "params": [
                {
                    "name": "rows",
                    "description": "The number of rows you want to add to the faux grid.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3151,
            "description": "Add cols to the faux grid.",
            "itemtype": "method",
            "name": "add_faux_cols",
            "params": [
                {
                    "name": "cols",
                    "description": "The number of cols you want to add to the faux grid.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3178,
            "description": "Recalculates the offsets for the faux grid. You need to use it when\nthe browser is resized.",
            "itemtype": "method",
            "name": "recalculate_faux_grid",
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3202,
            "description": "Get all widgets in the DOM and register them.",
            "itemtype": "method",
            "name": "get_widgets_from_DOM",
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3216,
            "description": "Calculate columns and rows to be set based on the configuration\n parameters, grid dimensions, etc ...",
            "itemtype": "method",
            "name": "generate_grid_and_stylesheet",
            "return": {
                "description": "Returns the instance of the Gridster class.",
                "type": "Object"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.gridster.js",
            "line": 3269,
            "description": "Destroy this gridster by removing any sign of its presence, making it easy to avoid memory leaks",
            "itemtype": "method",
            "name": "destroy",
            "return": {
                "description": "",
                "type": "Undefined"
            },
            "class": "Gridster"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 10,
            "description": "Hammer\nuse this to create instances",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "is_constructor": 1,
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 80,
            "description": "setup events to detect gestures on the document",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 106,
            "description": "create new hammer instance\nall methods should return the instance itself, so it is chainable.",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "is_constructor": 1,
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 149,
            "description": "bind events to the instance",
            "params": [
                {
                    "name": "gesture",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 164,
            "description": "unbind events to the instance",
            "params": [
                {
                    "name": "gesture",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 179,
            "description": "trigger gesture event",
            "params": [
                {
                    "name": "gesture",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 203,
            "description": "enable of disable hammer.js detection",
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Hammer.Instance"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 214,
            "description": "this holds the last move event,\nused to fix empty touchend issue\nsee the onTouch event for an explanation",
            "type": "{Object}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 223,
            "description": "when the mouse is hold down, this is true",
            "type": "{Boolean}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 230,
            "description": "when touch events have been fired, this is true",
            "type": "{Boolean}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 238,
            "description": "simple addEventListener",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 252,
            "description": "touch events with mouse fallback",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "eventType",
                    "description": "like Hammer.EVENT_MOVE",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 345,
            "description": "we have different events for each device/browser\ndetermine what we need and set them in the Hammer.EVENT_TYPES constant",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 379,
            "description": "create touchlist depending on the event",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "eventType",
                    "description": "used by the fakemultitouch plugin",
                    "type": "String"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 405,
            "description": "collect event data for Hammer js",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "eventType",
                    "description": "like Hammer.EVENT_MOVE",
                    "type": "String"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 429,
            "description": "prevent the browser default actions\nmostly used to disable scrolling of the browser",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 443,
            "description": "stop bubbling the event up to its parents",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 450,
            "description": "immediately stop gesture detection\nmight be useful after a swipe was detected",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 463,
            "description": "holds all pointers",
            "type": "{Object}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 469,
            "description": "get a list of pointers",
            "return": {
                "description": "touchlist",
                "type": "Array"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 484,
            "description": "update the position of a pointer",
            "params": [
                {
                    "name": "type",
                    "description": "Hammer.EVENT_END",
                    "type": "String"
                },
                {
                    "name": "pointerEvent",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 501,
            "description": "check if ev matches pointertype",
            "params": [
                {
                    "name": "pointerType",
                    "description": "Hammer.POINTER_MOUSE",
                    "type": "String"
                },
                {
                    "name": "ev",
                    "description": "",
                    "type": "PointerEvent"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 519,
            "description": "get events",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 530,
            "description": "reset the list",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 540,
            "description": "extend method,\nalso used for cloning when dest is an empty object",
            "params": [
                {
                    "name": "dest",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "merge",
                    "description": "do a merge",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "dest",
                "type": "Object"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 559,
            "description": "find if a node is in the given parent\nused for event delegation tricks",
            "params": [
                {
                    "name": "node",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "parent",
                    "description": "",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "has_parent",
                "type": "Boolean"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 577,
            "description": "get the center of all the touches",
            "params": [
                {
                    "name": "touches",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "center",
                "type": "Object"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 597,
            "description": "calculate the velocity between two points",
            "params": [
                {
                    "name": "delta_time",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "delta_x",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "delta_y",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "velocity",
                "type": "Object"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 612,
            "description": "calculate the angle between two coordinates",
            "params": [
                {
                    "name": "touch1",
                    "description": "",
                    "type": "Touch"
                },
                {
                    "name": "touch2",
                    "description": "",
                    "type": "Touch"
                }
            ],
            "return": {
                "description": "angle",
                "type": "Number"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 625,
            "description": "angle to direction define",
            "params": [
                {
                    "name": "touch1",
                    "description": "",
                    "type": "Touch"
                },
                {
                    "name": "touch2",
                    "description": "",
                    "type": "Touch"
                }
            ],
            "return": {
                "description": "direction constant, like Hammer.DIRECTION_LEFT",
                "type": "String"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 644,
            "description": "calculate the distance between two touches",
            "params": [
                {
                    "name": "touch1",
                    "description": "",
                    "type": "Touch"
                },
                {
                    "name": "touch2",
                    "description": "",
                    "type": "Touch"
                }
            ],
            "return": {
                "description": "distance",
                "type": "Number"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 657,
            "description": "calculate the scale factor between two touchLists (fingers)\nno scale is 1, and goes down to 0 when pinched together, and bigger when pinched out",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "scale",
                "type": "Number"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 674,
            "description": "calculate the rotation degrees between two touchLists (fingers)",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "rotation",
                "type": "Number"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 690,
            "description": "boolean if the direction is vertical",
            "params": [
                {
                    "name": "direction",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "is_vertical",
                "type": "Boolean"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 700,
            "description": "stop browser default behavior with css props",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HtmlElement"
                },
                {
                    "name": "css_props",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 754,
            "description": "start Hammer.gesture detection",
            "params": [
                {
                    "name": "inst",
                    "description": "",
                    "type": "Hammer.Instance"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 778,
            "description": "Hammer.gesture detection",
            "params": [
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 822,
            "description": "clear the Hammer.gesture vars\nthis is called on endDetect, but can also be used when a final Hammer.gesture has been detected\nto stop other Hammer.gestures from being fired",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 840,
            "description": "extend eventData for Hammer.gestures",
            "params": [
                {
                    "name": "ev",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "ev",
                "type": "Object"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 888,
            "description": "register new gesture",
            "params": [
                {
                    "name": "gesture",
                    "description": "object, see gestures.js for documentation",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "gestures",
                "type": "Array"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 927,
            "description": "Custom gestures\n==============================\n\nGesture object\n--------------------\nThe object structure of a gesture:\n\n{ name: 'mygesture',\n  index: 1337,\n  defaults: {\n    mygesture_option: true\n  }\n  handler: function(type, ev, inst) {\n    // trigger gesture event\n    inst.trigger(this.name, ev);\n  }\n}",
            "params": [
                {
                    "name": "name!~YUIDOC_LINE~!this",
                    "description": "should be the name of the gesture, lowercase\nit is also being used to disable/enable the gesture per instance config.",
                    "type": "String"
                },
                {
                    "name": "index",
                    "description": "index of the gesture, where it is going to be in the stack of gestures detection\nlike when you build an gesture that depends on the drag gesture, it is a good\nidea to place it after the index of the drag gesture.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "1000"
                },
                {
                    "name": "defaults",
                    "description": "default settings of the gesture. these are added to the instance settings,\nand can be overruled per instance. you can also add the name of the gesture,\nbut this is also added by default (and set to true).",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                },
                {
                    "name": "handler!~YUIDOC_LINE~!this",
                    "description": "handles the gesture detection of your custom gesture and receives the\nfollowing arguments:",
                    "type": "Function"
                },
                {
                    "name": "eventData!~YUIDOC_LINE~!",
                    "description": "event data containing the following properties:\n         timeStamp   {Number}        time the event occurred\n         target      {HTMLElement}   target element\n         touches     {Array}         touches (fingers, pointers, mouse) on the screen\n         pointerType {String}        kind of pointer that was used. matches Hammer.POINTER_MOUSE|TOUCH\n         center      {Object}        center position of the touches. contains pageX and pageY\n         deltaTime   {Number}        the total time of the touches in the screen\n         deltaX      {Number}        the delta on x axis we haved moved\n         deltaY      {Number}        the delta on y axis we haved moved\n         velocityX   {Number}        the velocity on the x\n         velocityY   {Number}        the velocity on y\n         angle       {Number}        the angle we are moving\n         direction   {String}        the direction we are moving. matches Hammer.DIRECTION_UP|DOWN|LEFT|RIGHT\n         distance    {Number}        the distance we haved moved\n         scale       {Number}        scaling of the touches, needs 2 touches\n         rotation    {Number}        rotation of the touches, needs 2 touches *\n         eventType   {String}        matches Hammer.EVENT_START|MOVE|END\n         srcEvent    {Object}        the source event, like TouchStart or MouseDown *\n         startEvent  {Object}        contains the same properties as above,\n                                     but from the first touch. this is used to calculate\n                                     distances, deltaTime, scaling etc",
                    "type": "Object"
                },
                {
                    "name": "inst!~YUIDOC_LINE~!",
                    "description": "the instance we are doing the detection for. you can get the options from\n     the inst.options object and trigger the gesture event by calling inst.trigger\n\n\nHandle gestures\n--------------------\ninside the handler you can get/set Hammer.detection.current. This is the current\ndetection session. It has the following properties",
                    "type": "Hammer.Instance"
                },
                {
                    "name": "name!~YUIDOC_LINE~!",
                    "description": "contains the name of the gesture we have detected. it has not a real function,\n     only to check in other gestures if something is detected.\n     like in the drag gesture we set it to 'drag' and in the swipe gesture we can\n     check if the current gesture is 'drag' by accessing Hammer.detection.current.name",
                    "type": "String"
                },
                {
                    "name": "inst!~YUIDOC_LINE~!",
                    "description": "the instance we do the detection for",
                    "type": "Hammer.Instance"
                },
                {
                    "name": "startEvent!~YUIDOC_LINE~!",
                    "description": "contains the properties of the first gesture detection in this session.\n     Used for calculations about timing, distance, etc.",
                    "type": "Object"
                },
                {
                    "name": "lastEvent!~YUIDOC_LINE~!",
                    "description": "contains all the properties of the last gesture detect in this session.\n\nafter the gesture detection session has been completed (user has released the screen)\nthe Hammer.detection.current object is copied into Hammer.detection.previous,\nthis is usefull for gestures like doubletap, where you need to know if the\nprevious gesture was a tap\n\noptions that have been set by the instance can be received by calling inst.options\n\nYou can trigger a gesture event by calling inst.trigger(\"mygesture\", event).\nThe first param is the name of your gesture, the second the event argument\n\n\nRegister gestures\n--------------------\nWhen an gesture is added to the Hammer.gestures object, it is auto registered\nat the setup of the first Hammer instance. You can also call Hammer.detection.register\nmanually and pass your gesture object as a param",
                    "type": "Object"
                }
            ],
            "readonly": "",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1034,
            "description": "Hold\nTouch stays at the same place for x time",
            "events": "hold",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1080,
            "description": "Tap/DoubleTap\nQuick touch at a place or double at the same place",
            "events": "tap, doubletap",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1126,
            "description": "Swipe\ntriggers swipe events when the end velocity is above the threshold",
            "events": "swipe, swipeleft, swiperight, swipeup, swipedown",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1160,
            "description": "Drag\nMove with x fingers (default 1) around on the page. Blocking the scrolling when\nmoving left and right is a good practice. When all the drag events are blocking\nyou disable scrolling on that area.",
            "events": "drag, drapleft, dragright, dragup, dragdown",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1265,
            "description": "Transform\nUser want to scale or rotate with 2 fingers",
            "events": "transform, pinch, pinchin, pinchout, rotate",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1355,
            "description": "Touch\nCalled as first, tells the user has touched the screen",
            "events": "touch",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1391,
            "description": "Release\nCalled as last, tells the user has released the screen",
            "events": "release",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1431,
            "description": "bind dom events\nthis overwrites addEventListener",
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "HTMLElement"
                },
                {
                    "name": "eventTypes",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1472,
            "description": "the methods are called by the instance, but with the jquery plugin\nwe use the jquery event methods instead.",
            "this": "{Hammer.Instance}",
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1486,
            "description": "trigger events\nthis is called by the gestures to trigger an event like 'tap'",
            "this": "{Hammer.Instance}",
            "params": [
                {
                    "name": "gesture",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "eventData",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.hammer.js",
            "line": 1507,
            "description": "jQuery plugin\ncreate instance of Hammer and watch for gestures,\nand when called again you can change the options",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "return": {
                "description": "",
                "type": "JQuery"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.ui.touch-punch.js",
            "line": 25,
            "description": "Simulate a mouse event based on a corresponding touch event",
            "params": [
                {
                    "name": "event",
                    "description": "A touch event",
                    "type": "Object"
                },
                {
                    "name": "simulatedType",
                    "description": "The corresponding mouse event",
                    "type": "String"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.ui.touch-punch.js",
            "line": 65,
            "description": "Handle the jQuery UI widget's touchstart events",
            "params": [
                {
                    "name": "event",
                    "description": "The widget element's touchstart event",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.ui.touch-punch.js",
            "line": 94,
            "description": "Handle the jQuery UI widget's touchmove events",
            "params": [
                {
                    "name": "event",
                    "description": "The document's touchmove event",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.ui.touch-punch.js",
            "line": 112,
            "description": "Handle the jQuery UI widget's touchend events",
            "params": [
                {
                    "name": "event",
                    "description": "The document's touchend event",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/jquery.ui.touch-punch.js",
            "line": 140,
            "description": "A duck punch of the $.ui.mouse _mouseInit method to support touch events.\nThis method extends the widget with bound touch event handlers that\ntranslate touch events to mouse events and pass them to the widget's\noriginal mouse event handling methods.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/processing-1.4.1.js",
            "line": 1,
            "description": "P R O C E S S I N G . J S - 1.4.1\n    a port of the Processing visualization language\nProcessing.js is licensed under the MIT License, see LICENSE.\n    For a list of copyright holders, please refer to AUTHORS.\nhttp://processingjs.org",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/quadtree.js",
            "line": 46,
            "description": "Node creator. You should never create a node manually. the algorithm takes\ncare of that for you.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/quadtree.js",
            "line": 64,
            "description": "iterates all items that match the selector and invokes the supplied callback on them.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/quadtree.js",
            "line": 80,
            "description": "Adds a new Item to the node.\n\nIf the node already has subnodes, the item gets pushed down one level.\nIf the item does not fit into the subnodes, it gets saved in the\n\"children\"-array.\n\nIf the maxChildren limit is exceeded after inserting the item,\nthe node gets divided and all items inside the \"children\"-array get\npushed down to the new subnodes.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/quadtree.js",
            "line": 114,
            "description": "Find a node the item should be inserted in.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/quadtree.js",
            "line": 135,
            "description": "Finds the regions the item overlaps with. See constants defined\nabove. The callback is called for every region the item overlaps.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/quadtree.js",
            "line": 152,
            "description": "Divides the current node into four subnodes and adds them\nto the nodes array of the current node. Then reinserts all\nchildren.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/quadtree.js",
            "line": 181,
            "description": "Clears the node and all its subnodes.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1,
            "license": "RequireJS 2.1.6 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/requirejs for details",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 49,
            "description": "Helper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 64,
            "description": "Helper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 87,
            "description": "Cycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 103,
            "description": "Simple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 154,
            "description": "Constructs an error with a pointer to an URL with more information.",
            "params": [
                {
                    "name": "id",
                    "description": "the error ID that maps to an ID on a web page.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "human readable error.",
                    "type": "String"
                },
                {
                    "name": "err",
                    "description": "the original error, if there is one.",
                    "type": "Error",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 220,
            "description": "Trims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "params": [
                {
                    "name": "ary",
                    "description": "the array of path segments.",
                    "type": "Array"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 253,
            "description": "Given a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "params": [
                {
                    "name": "name",
                    "description": "the relative name",
                    "type": "String"
                },
                {
                    "name": "baseName",
                    "description": "a real name that the name arg is relative\nto.",
                    "type": "String"
                },
                {
                    "name": "applyMap",
                    "description": "apply the map config to the value. Should\nonly be done if this normalization is for a dependency ID.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "normalized name",
                "type": "String"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 399,
            "description": "Creates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "params": [
                {
                    "name": "name",
                    "description": "the module name",
                    "type": "String"
                },
                {
                    "name": "parentModuleMap",
                    "description": "parent module map\nfor the module name, used to resolve relative names.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "isNormalized:",
                    "description": "is the ID already normalized.\nThis is true if this call is done for a define() module ID.",
                    "type": "Boolean"
                },
                {
                    "name": "applyMap:",
                    "description": "apply the map config to the ID.\nShould only be true if this map is for a dependency.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 541,
            "description": "Internal method to transfer globalQueue items to this context's\ndefQueue.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 829,
            "description": "Checks if the module is ready to define itself, and if so,\ndefine it.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1188,
            "description": "Given an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1241,
            "description": "Set a configuration for the context.",
            "params": [
                {
                    "name": "cfg",
                    "description": "config object to integrate.",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1425,
            "description": "Converts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1487,
            "description": "Called to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1500,
            "description": "Internal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "params": [
                {
                    "name": "moduleName",
                    "description": "the name of the module to potentially complete.",
                    "type": "String"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1556,
            "description": "Converts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1627,
            "description": "Executes a module callback function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "access": "private",
            "tagname": "",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1638,
            "description": "callback for script loads, used to check status of loading.",
            "params": [
                {
                    "name": "evt",
                    "description": "the event from the browser for the script\nthat was loaded.",
                    "type": "Event"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1660,
            "description": "Callback for script errors.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1675,
            "description": "Main entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1725,
            "description": "Support require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1733,
            "description": "Execute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "params": [
                {
                    "name": "fn",
                    "description": "function to execute later.",
                    "type": "Function"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1743,
            "description": "Export require as a global, but only if it does not already exist.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1790,
            "description": "Any errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "params": [
                {
                    "name": "err",
                    "description": "the error object.",
                    "type": "Error"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1797,
            "description": "Does the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "params": [
                {
                    "name": "context",
                    "description": "the require context to find state.",
                    "type": "Object"
                },
                {
                    "name": "moduleName",
                    "description": "the name of the module.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "the URL to the module.",
                    "type": "Object"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 1958,
            "description": "The function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/require.js",
            "line": 2032,
            "description": "Executes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "params": [
                {
                    "name": "text",
                    "description": "the text to execute/evaluate.",
                    "type": "String"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 1,
            "author": "Larry Battle / http://bateru.com/news",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 244,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 634,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 999,
            "author": "zz85 / http://www.lab4games.net/zz85/blog",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 1318,
            "author": "WestLangley / http://github.com/WestLangley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 2160,
            "author": "WestLangley / http://github.com/WestLangley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 2733,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 2859,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 3121,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 3452,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 3677,
            "author": "WestLangley / http://github.com/WestLangley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 4655,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 4821,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 4957,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5110,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5332,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5450,
            "description": "Spline from Tween.js, slightly optimized (and trashed)\nhttp://sole.github.com/tween.js/examples/05_spline.html",
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5626,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5816,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5826,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5836,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5908,
            "description": "https://github.com/mrdoob/eventdispatcher.js/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 5991,
            "author": "bhouston / http://exocortex.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 6231,
            "author": "WestLangley / http://github.com/WestLangley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 6721,
            "author": "julianwa / https://github.com/julianwa",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 7389,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 7438,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 7488,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 8294,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 8848,
            "author": "WestLangley / http://github.com/WestLangley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 8890,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 8917,
            "author": "zz85 / http://www.lab4games.net/zz85/blog",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 8939,
            "description": "Uses Focal Length (in mm) to estimate and set FOV\n35mm (fullframe) camera is used if frame size is not specified;\nFormula based on http://www.bobatkins.com/photography/technical/field_of_view.html",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 8955,
            "description": "Sets an offset in a larger frustum. This is useful for multi-window or\nmulti-monitor/multi-machine setups.\n\nFor example, if you have 3x2 monitors and each monitor is 1920x1080 and\nthe monitors are in grid like this\n\n  +---+---+---+\n  | A | B | C |\n  +---+---+---+\n  | D | E | F |\n  +---+---+---+\n\nthen for each monitor you would call it like this\n\n  var w = 1920;\n  var h = 1080;\n  var fullWidth = w * 3;\n  var fullHeight = h * 2;\n\n  --A--\n  camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n  --B--\n  camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n  --C--\n  camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n  --D--\n  camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n  --E--\n  camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n  --F--\n  camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\n  Note there is no reason monitors have to be the same size or in a grid.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9033,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9059,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9080,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9105,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9183,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9212,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9239,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9302,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9743,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 9787,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 10231,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 10276,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 10327,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 10454,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 11664,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 11711,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 11841,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n color: <hex>,\n opacity: <float>,\n\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n linewidth: <float>,\n linecap: \"round\",\n linejoin: \"round\",\n\n vertexColors: <bool>\n\n fog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 11902,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n color: <hex>,\n opacity: <float>,\n\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n linewidth: <float>,\n\n scale: <float>,\n dashSize: <float>,\n gapSize: <float>,\n\n vertexColors: <bool>\n\n fog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 11968,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n color: <hex>,\n opacity: <float>,\n map: new THREE.Texture( <Image> ),\n\n lightMap: new THREE.Texture( <Image> ),\n\n specularMap: new THREE.Texture( <Image> ),\n\n envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n combine: THREE.Multiply,\n reflectivity: <float>,\n refractionRatio: <float>,\n\n shading: THREE.SmoothShading,\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n wireframe: <boolean>,\n wireframeLinewidth: <float>,\n\n vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\n skinning: <bool>,\n morphTargets: <bool>,\n\n fog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12076,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n color: <hex>,\n ambient: <hex>,\n emissive: <hex>,\n opacity: <float>,\n\n map: new THREE.Texture( <Image> ),\n\n lightMap: new THREE.Texture( <Image> ),\n\n specularMap: new THREE.Texture( <Image> ),\n\n envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n combine: THREE.Multiply,\n reflectivity: <float>,\n refractionRatio: <float>,\n\n shading: THREE.SmoothShading,\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n wireframe: <boolean>,\n wireframeLinewidth: <float>,\n\n vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\n skinning: <bool>,\n morphTargets: <bool>,\n morphNormals: <bool>,\n\n\tfog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12200,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n color: <hex>,\n ambient: <hex>,\n emissive: <hex>,\n specular: <hex>,\n shininess: <float>,\n opacity: <float>,\n\n map: new THREE.Texture( <Image> ),\n\n lightMap: new THREE.Texture( <Image> ),\n\n bumpMap: new THREE.Texture( <Image> ),\n bumpScale: <float>,\n\n normalMap: new THREE.Texture( <Image> ),\n normalScale: <Vector2>,\n\n specularMap: new THREE.Texture( <Image> ),\n\n envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n combine: THREE.Multiply,\n reflectivity: <float>,\n refractionRatio: <float>,\n\n shading: THREE.SmoothShading,\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n wireframe: <boolean>,\n wireframeLinewidth: <float>,\n\n vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\n skinning: <bool>,\n morphTargets: <bool>,\n morphNormals: <bool>,\n\n\tfog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12354,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n opacity: <float>,\n\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n wireframe: <boolean>,\n wireframeLinewidth: <float>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12395,
            "author": "mrdoob / http://mrdoob.com/\n\nparameters = {\n opacity: <float>,\n\n shading: THREE.FlatShading,\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n wireframe: <boolean>,\n wireframeLinewidth: <float>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12442,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12457,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n color: <hex>,\n opacity: <float>,\n map: new THREE.Texture( <Image> ),\n\n size: <float>,\n\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n vertexColors: <bool>,\n\n fog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12519,
            "author": "mrdoob / http://mrdoob.com/\n\nparameters = {\n color: <hex>,\n program: <function>,\n opacity: <float>,\n blending: THREE.NormalBlending\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12555,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n fragmentShader: <string>,\n vertexShader: <string>,\n\n uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\n\n defines: { \"label\" : \"value\" },\n\n shading: THREE.SmoothShading,\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n wireframe: <boolean>,\n wireframeLinewidth: <float>,\n\n lights: <bool>,\n\n vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\n\n skinning: <bool>,\n morphTargets: <bool>,\n morphNormals: <bool>,\n\n\tfog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12653,
            "author": "alteredq / http://alteredqualia.com/\n\nparameters = {\n color: <hex>,\n opacity: <float>,\n map: new THREE.Texture( <Image> ),\n\n blending: THREE.NormalBlending,\n depthTest: <bool>,\n depthWrite: <bool>,\n\n useScreenCoordinates: <bool>,\n sizeAttenuation: <bool>,\n scaleByViewport: <bool>,\n alignment: THREE.SpriteAlignment.center,\n\n\tuvOffset: new THREE.Vector2(),\n\tuvScale: new THREE.Vector2(),\n\n fog: <bool>\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12748,
            "author": "szimek / https://github.com/szimek/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12839,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12865,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12888,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12911,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12952,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 12990,
            "author": "jonobr1 / http://jonobr1.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13086,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13143,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13394,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13590,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13614,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13716,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13758,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13869,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13890,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 13908,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 15227,
            "author": "mikael emtinger / http://gomo.se/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 18429,
            "author": "szimek / https://github.com/szimek/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25788,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25868,
            "author": "alteredq / http://alteredqualia.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25881,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25900,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25926,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25953,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25963,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25981,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 25996,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 26573,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27126,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27166,
            "author": "alteredq / http://alteredqualia.com/\n\nFor Text operations in three.js (See TextGeometry)\n\nIt uses techniques used in:\n\n\ttypeface.js and canvastext\n\t\tFor converting fonts and rendering with javascript\n\t\thttp://typeface.neocracy.org\n\n\tTriangulation ported from AS3\n\t\tSimple Polygon Triangulation\n\t\thttp://actionsnippet.com/?p=1462\n\n\tA Method to triangulate shapes with holes\n\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27431,
            "description": "This code is a quick port of code written in C++ which was submitted to\nflipcode.com by John W. Ratcliff  // July 22, 2000\nSee original code and more information here:\nhttp://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\nported to actionscript by Zevan Rosser\nwww.actionsnippet.com\n\nported to javascript by Joshua Koo\nhttp://www.lab4games.net/zz85/blog",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27626,
            "author": "zz85 / http://www.lab4games.net/zz85/blog\nExtensible curve object\n\nSome common of Curve methods\n.getPoint(t), getTangent(t)\n.getPointAt(u), getTagentAt(u)\n.getPoints(), .getSpacedPoints()\n.getLength()\n.updateArcLengths()\n\nThis file contains following classes:\n\n-- 2d classes --\nTHREE.Curve\nTHREE.LineCurve\nTHREE.QuadraticBezierCurve\nTHREE.CubicBezierCurve\nTHREE.SplineCurve\nTHREE.ArcCurve\nTHREE.EllipseCurve\n\n-- 3d classes --\nTHREE.LineCurve3\nTHREE.QuadraticBezierCurve3\nTHREE.CubicBezierCurve3\nTHREE.SplineCurve3\nTHREE.ClosedSplineCurve3\n\nA series of curves can be represented as a THREE.CurvePath",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27659,
            "description": "Abstract Curve base class",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27891,
            "description": "Line",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27929,
            "description": "Quadratic Bezier curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 27974,
            "description": "Cubic Bezier curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28015,
            "description": "Spline curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28049,
            "description": "Ellipse curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28091,
            "description": "Arc curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28103,
            "description": "Utils",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28156,
            "description": "3D Curves",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28172,
            "description": "Line3D",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28201,
            "description": "Quadratic Bezier 3D curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28231,
            "description": "Cubic Bezier 3D curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28262,
            "description": "Spline 3D curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28334,
            "description": "Closed Spline 3D curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28373,
            "author": "zz85 / http://www.lab4games.net/zz85/blog",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28378,
            "description": "Curved Path - a curve path is simply a array of connected\n  curves, but retains the api of a curve",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28569,
            "description": "Create Geometries Helpers",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28606,
            "description": "Bend / Wrap Helper Methods",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28698,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 28758,
            "author": "zz85 / http://www.lab4games.net/zz85/blog\nCreates free form 2d path using series of points, lines or curves.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 29312,
            "author": "zz85 / http://www.lab4games.net/zz85/blog\nDefines a 2d shape plane using paths.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 29431,
            "description": "Utils",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 29844,
            "author": "mikael emtinger / http://gomo.se/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 30102,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 30488,
            "author": "erik kitson",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 30911,
            "description": "Camera for rendering cube maps\n\t- renders scene into axis-aligned cube",
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 31225,
            "author": "hughes",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 31279,
            "author": "mrdoob / http://mrdoob.com/\nbased on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 31391,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 31545,
            "author": "zz85 / http://www.lab4games.net/zz85/blog\n\nCreates extruded geometry from a path shape.\n\nparameters = {\n\n size: <float>, // size of the text\n height: <float>, // thickness to extrude text\n curveSegments: <int>, // number of points on the curves\n steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\n amount: <int>, // Amount\n\n bevelEnabled: <bool>, // turn on bevel\n bevelThickness: <float>, // how deep into text bevel goes\n bevelSize: <float>, // how far from text outline is bevel\n bevelSegments: <int>, // number of bevel layers\n\n extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n\n material: <int> // material index for front and back faces\n extrudeMaterial: <int> // material index for extrusion and beveled faces\n uvGenerator: <Object> // object that provides UV generator functions\n\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32278,
            "author": "jonobr1 / http://jonobr1.com\n\nCreates a one-sided polygonal geometry from a path shape. Similar to\nExtrudeGeometry.\n\nparameters = {\n\n\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n\n\tmaterial: <int> // material index for front and back faces\n\tuvGenerator: <Object> // object that provides UV generator functions\n\n}",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32311,
            "description": "Add an array of shapes to THREE.ShapeGeometry.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32326,
            "description": "Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32414,
            "author": "bhouston / http://exocortex.com",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32500,
            "author": "mrdoob / http://mrdoob.com/\nbased on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32573,
            "author": "Kaleb Murphy",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32645,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32741,
            "author": "alteredq / http://alteredqualia.com/\n\nFor creating 3D text geometry in three.js\n\nText = 3D Text\n\nparameters = {\n size: \t\t\t<float>, \t// size of the text\n height: \t\t<float>, \t// thickness to extrude text\n curveSegments: \t<int>,\t\t// number of points on the curves\n\n font: \t\t\t<string>,\t\t// font name\n weight: \t\t<string>,\t\t// font weight (normal, bold)\n style: \t\t\t<string>,\t\t// font style  (normal, italics)\n\n bevelEnabled:\t<bool>,\t\t\t// turn on bevel\n bevelThickness: <float>, \t\t// how deep into text bevel goes\n bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\n }",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32800,
            "author": "mrdoob / http://mrdoob.com/\nbased on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32872,
            "author": "oosmoxiecode\nbased on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 32981,
            "author": "miningold / https://github.com/miningold\n\nModified from the TorusKnotGeometry by @oosmoxiecode\n\nCreates a tube which extrudes along a 3d spline\n\nUses parallel transport frames as described in\nhttp://www.cs.indiana.edu/pub/techreports/TR425.pdf",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33261,
            "author": "WestLangley / http://github.com/WestLangley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33483,
            "author": "timothypratley / https://github.com/timothypratley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33512,
            "author": "timothypratley / https://github.com/timothypratley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33530,
            "author": "timothypratley / https://github.com/timothypratley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33549,
            "author": "zz85 / https://github.com/zz85\nParametric Surfaces Geometry\nbased on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\nnew THREE.ParametricGeometry( parametricFunction, uSegments, ySegements, useTris );",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33637,
            "author": "qiao / https://github.com/qiao",
            "fileoverview": "This is a convex hull generator using the incremental method. \nThe complexity is O(n^2) where n is the number of vertices.\nO(nlogn) algorithms do exist, but they are much more complicated.\n\nBenchmark: \n\n Platform: CPU: P7350 @2.00GHz Engine: V8\n\n Num Vertices\tTime(ms)\n\n    10           1\n    20           3\n    30           19\n    40           48\n    50           107",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33738,
            "description": "Whether the face is visible from the vertex",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33756,
            "description": "Face normal",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33774,
            "description": "Detect whether two edges are equal.\nNote that when constructing the convex hull, two same edges can only\nbe of the negative direction.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33785,
            "description": "Create a random offset between -1e-6 and 1e-6.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33795,
            "description": "XXX: Not sure if this is the correct approach. Need someone to review.",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33860,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33890,
            "author": "bhouston / http://exocortex.com\n\nCreates an arrow for visualizing directions\n\nParameters:\n dir - Vector3\n origin - Vector3\n length - Number\n hex - color in hex value",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 33982,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34066,
            "author": "alteredq / http://alteredqualia.com/\n\n\t- shows frustum, line of sight and up of the camera\n\t- suitable for fast updates\n\t- based on frustum visualization in lightgl.js shadowmap example\n\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34253,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34306,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34335,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34379,
            "author": "mrdoob / http://mrdoob.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34450,
            "author": "WestLangley / http://github.com/WestLangley",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34507,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34520,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34609,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 34916,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 35219,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 35715,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 36020,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 36220,
            "author": "mikael emtinger / http://gomo.se/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/vendor/three.js",
            "line": 36407,
            "author": "alteredq / http://alteredqualia.com/",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 1,
            "description": "The entry point to the application.",
            "author": "Kate Compton",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 13,
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 25,
            "itemtype": "method",
            "name": "addElapsed",
            "params": [
                {
                    "name": "t",
                    "description": "The amount of time to be added",
                    "type": "Number"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 35,
            "itemtype": "method",
            "name": "updateTime",
            "params": [
                {
                    "name": "t",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 45,
            "itemtype": "method",
            "name": "toString",
            "class": "Time"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 58,
            "itemtype": "method",
            "name": "init",
            "is_constructor": 1,
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "dimensions",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 96,
            "description": "Set the starting time of the app",
            "itemtype": "method",
            "name": "start",
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 108,
            "itemtype": "method",
            "name": "changeMode",
            "params": [
                {
                    "name": "modeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 141,
            "itemtype": "method",
            "name": "getPositionRelativeTo",
            "params": [
                {
                    "name": "div",
                    "description": ""
                },
                {
                    "name": "pos",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "x",
                            "description": "",
                            "type": "Number"
                        },
                        {
                            "name": "y",
                            "description": "",
                            "type": "Number"
                        }
                    ]
                }
            ],
            "return": {
                "description": "",
                "type": "Vector"
            },
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 158,
            "description": "Logs to the UI logger, not the console",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "line",
                    "description": ""
                }
            ],
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 167,
            "description": "Logs when things move in the UI",
            "itemtype": "method",
            "name": "moveLog",
            "params": [
                {
                    "name": "line",
                    "description": ""
                }
            ],
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 176,
            "description": "Logs mode changes",
            "itemtype": "method",
            "name": "modeLog",
            "params": [
                {
                    "name": "line",
                    "description": ""
                }
            ],
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 187,
            "itemtype": "method",
            "name": "getOption",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns the option, or false if undefined"
            },
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/app.js",
            "line": 198,
            "itemtype": "method",
            "name": "getTuningValue",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "Returns the tuning value or 0 if undefined"
            },
            "class": "App"
        },
        {
            "file": "BotsEvolved/js/botMain.js",
            "line": 1,
            "author": "Kate Compton",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1294"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1402"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1489"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:106"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:164"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:179"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:203"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:469"
        },
        {
            "message": "replacing incorrect tag: parm with param",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:559"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:577"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:597"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:612"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:625"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:644"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:657"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:690"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:840"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:888"
        },
        {
            "message": "unknown tag: events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1034"
        },
        {
            "message": "unknown tag: events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1080"
        },
        {
            "message": "unknown tag: events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1126"
        },
        {
            "message": "unknown tag: events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1160"
        },
        {
            "message": "unknown tag: events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1265"
        },
        {
            "message": "unknown tag: events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1355"
        },
        {
            "message": "unknown tag: events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1391"
        },
        {
            "message": "unknown tag: this",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1472"
        },
        {
            "message": "unknown tag: this",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1486"
        },
        {
            "message": "unknown tag: license",
            "line": " BotsEvolved/js/vendor/require.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/require.js:154"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/require.js:253"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/require.js:399"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " BotsEvolved/js/vendor/require.js:1188"
        },
        {
            "message": "unknown tag: fileoverview",
            "line": " BotsEvolved/js/vendor/three.js:33637"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/ai/dtreeViz.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/bot/attachment/actuator.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/bot/attachment/attachment.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/bot/attachment/attachments.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/bot/attachment/sensor.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/bot/bot.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/bot/chassis.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/bot/wiring.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/physics/arena.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/physics/boxDebugDraw.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/physics/boxWorld.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/botApp.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/botPrint/botEvo.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ai/hfsm.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/commonUtils.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/kcolor.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/map.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/range.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/rect.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/timespan.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/transform.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/tree.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/utilities.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/common/vector.js:1"
        },
        {
            "message": "Missing item type\nmethod translateTo",
            "line": " BotsEvolved/js/modules/shared/common/vector.js:401"
        },
        {
            "message": "Missing item type\nmethod bezier",
            "line": " BotsEvolved/js/modules/shared/common/vector.js:409"
        },
        {
            "message": "Missing item type\nmethod bezierTo",
            "line": " BotsEvolved/js/modules/shared/common/vector.js:419"
        },
        {
            "message": "Missing item type\nmethod bezierWithRelativeControlPoints",
            "line": " BotsEvolved/js/modules/shared/common/vector.js:430"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/evo/evoSim.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/geo/particles/particle.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/geo/geometry.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/graphs/edge.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/graphs/graph.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/graphs/path.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/graphs/pathset.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/graphs/svgLoader.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/io/saveFile.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/threeUtils/fonts/fonts.js:1"
        },
        {
            "message": "Missing item type\ntypeface.js, version 0.15 | typefacejs.neocracy.org\nCopyright (c) 2008 - 2009, David Chester davidchester@gmx.net \nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.",
            "line": " BotsEvolved/js/modules/shared/threeUtils/fonts/typeface-0.15.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/threeUtils/modGeo.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/threeUtils/threeCam.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/threeUtils/threeFonts.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/threeUtils/threeUtils.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/threeUtils/threeView.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/controls.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/mode.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/output.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/panel.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/popup.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/popup.js:4"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/uiUtils.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/uiUtils.js:4"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/modules/shared/ui/window.js:1"
        },
        {
            "message": "Missing item type\nFor feature detection",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1286"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1294"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1314"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1323"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1344"
        },
        {
            "message": "Missing item type\nFetches boolean attributes by node",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1364"
        },
        {
            "message": "Missing item type\nFetches attributes without interpolation\nhttp://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1377"
        },
        {
            "message": "Missing item type\nUses defaultValue to retrieve value in IE6/7",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1388"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1402"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1431"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1442"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1453"
        },
        {
            "message": "Missing item type\nDetect xml",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1475"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1489"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1927"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " BotsEvolved/js/vendor/jquery-1.10.1.js:1956"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:5447"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:5448"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:5449"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:5652"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:5653"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:5654"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:5999"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:6000"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/jquery-ui.js:6001"
        },
        {
            "message": "Missing item type\nHammer\nuse this to create instances",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:10"
        },
        {
            "message": "Missing item type\nsetup events to detect gestures on the document",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:80"
        },
        {
            "message": "Missing item type\ncreate new hammer instance\nall methods should return the instance itself, so it is chainable.",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:106"
        },
        {
            "message": "Missing item type\nbind events to the instance",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:149"
        },
        {
            "message": "Missing item type\nunbind events to the instance",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:164"
        },
        {
            "message": "Missing item type\ntrigger gesture event",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:179"
        },
        {
            "message": "Missing item type\nenable of disable hammer.js detection",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:203"
        },
        {
            "message": "Missing item type\nthis holds the last move event,\nused to fix empty touchend issue\nsee the onTouch event for an explanation",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:214"
        },
        {
            "message": "Missing item type\nwhen the mouse is hold down, this is true",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:223"
        },
        {
            "message": "Missing item type\nwhen touch events have been fired, this is true",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:230"
        },
        {
            "message": "Missing item type\nsimple addEventListener",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:238"
        },
        {
            "message": "Missing item type\ntouch events with mouse fallback",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:252"
        },
        {
            "message": "Missing item type\nwe have different events for each device/browser\ndetermine what we need and set them in the Hammer.EVENT_TYPES constant",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:345"
        },
        {
            "message": "Missing item type\ncreate touchlist depending on the event",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:379"
        },
        {
            "message": "Missing item type\ncollect event data for Hammer js",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:405"
        },
        {
            "message": "Missing item type\nprevent the browser default actions\nmostly used to disable scrolling of the browser",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:429"
        },
        {
            "message": "Missing item type\nstop bubbling the event up to its parents",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:443"
        },
        {
            "message": "Missing item type\nimmediately stop gesture detection\nmight be useful after a swipe was detected",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:450"
        },
        {
            "message": "Missing item type\nholds all pointers",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:463"
        },
        {
            "message": "Missing item type\nget a list of pointers",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:469"
        },
        {
            "message": "Missing item type\nupdate the position of a pointer",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:484"
        },
        {
            "message": "Missing item type\ncheck if ev matches pointertype",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:501"
        },
        {
            "message": "Missing item type\nget events",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:519"
        },
        {
            "message": "Missing item type\nreset the list",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:530"
        },
        {
            "message": "Missing item type\nextend method,\nalso used for cloning when dest is an empty object",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:540"
        },
        {
            "message": "Missing item type\nfind if a node is in the given parent\nused for event delegation tricks",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:559"
        },
        {
            "message": "Missing item type\nget the center of all the touches",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:577"
        },
        {
            "message": "Missing item type\ncalculate the velocity between two points",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:597"
        },
        {
            "message": "Missing item type\ncalculate the angle between two coordinates",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:612"
        },
        {
            "message": "Missing item type\nangle to direction define",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:625"
        },
        {
            "message": "Missing item type\ncalculate the distance between two touches",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:644"
        },
        {
            "message": "Missing item type\ncalculate the scale factor between two touchLists (fingers)\nno scale is 1, and goes down to 0 when pinched together, and bigger when pinched out",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:657"
        },
        {
            "message": "Missing item type\ncalculate the rotation degrees between two touchLists (fingers)",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:674"
        },
        {
            "message": "Missing item type\nboolean if the direction is vertical",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:690"
        },
        {
            "message": "Missing item type\nstop browser default behavior with css props",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:700"
        },
        {
            "message": "Missing item type\nstart Hammer.gesture detection",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:754"
        },
        {
            "message": "Missing item type\nHammer.gesture detection",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:778"
        },
        {
            "message": "Missing item type\nclear the Hammer.gesture vars\nthis is called on endDetect, but can also be used when a final Hammer.gesture has been detected\nto stop other Hammer.gestures from being fired",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:822"
        },
        {
            "message": "Missing item type\nextend eventData for Hammer.gestures",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:840"
        },
        {
            "message": "Missing item type\nregister new gesture",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:888"
        },
        {
            "message": "Missing item type\nCustom gestures\n==============================\n\nGesture object\n--------------------\nThe object structure of a gesture:\n\n{ name: 'mygesture',\n  index: 1337,\n  defaults: {\n    mygesture_option: true\n  }\n  handler: function(type, ev, inst) {\n    // trigger gesture event\n    inst.trigger(this.name, ev);\n  }\n}",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:927"
        },
        {
            "message": "Missing item type\nHold\nTouch stays at the same place for x time",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1034"
        },
        {
            "message": "Missing item type\nTap/DoubleTap\nQuick touch at a place or double at the same place",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1080"
        },
        {
            "message": "Missing item type\nSwipe\ntriggers swipe events when the end velocity is above the threshold",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1126"
        },
        {
            "message": "Missing item type\nDrag\nMove with x fingers (default 1) around on the page. Blocking the scrolling when\nmoving left and right is a good practice. When all the drag events are blocking\nyou disable scrolling on that area.",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1160"
        },
        {
            "message": "Missing item type\nTransform\nUser want to scale or rotate with 2 fingers",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1265"
        },
        {
            "message": "Missing item type\nTouch\nCalled as first, tells the user has touched the screen",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1355"
        },
        {
            "message": "Missing item type\nRelease\nCalled as last, tells the user has released the screen",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1391"
        },
        {
            "message": "Missing item type\nbind dom events\nthis overwrites addEventListener",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1431"
        },
        {
            "message": "Missing item type\nthe methods are called by the instance, but with the jquery plugin\nwe use the jquery event methods instead.",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1472"
        },
        {
            "message": "Missing item type\ntrigger events\nthis is called by the gestures to trigger an event like 'tap'",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1486"
        },
        {
            "message": "Missing item type\njQuery plugin\ncreate instance of Hammer and watch for gestures,\nand when called again you can change the options",
            "line": " BotsEvolved/js/vendor/jquery.hammer.js:1507"
        },
        {
            "message": "Missing item type\nSimulate a mouse event based on a corresponding touch event",
            "line": " BotsEvolved/js/vendor/jquery.ui.touch-punch.js:25"
        },
        {
            "message": "Missing item type\nHandle the jQuery UI widget's touchstart events",
            "line": " BotsEvolved/js/vendor/jquery.ui.touch-punch.js:65"
        },
        {
            "message": "Missing item type\nHandle the jQuery UI widget's touchmove events",
            "line": " BotsEvolved/js/vendor/jquery.ui.touch-punch.js:94"
        },
        {
            "message": "Missing item type\nHandle the jQuery UI widget's touchend events",
            "line": " BotsEvolved/js/vendor/jquery.ui.touch-punch.js:112"
        },
        {
            "message": "Missing item type\nA duck punch of the $.ui.mouse _mouseInit method to support touch events.\nThis method extends the widget with bound touch event handlers that\ntranslate touch events to mouse events and pass them to the widget's\noriginal mouse event handling methods.",
            "line": " BotsEvolved/js/vendor/jquery.ui.touch-punch.js:140"
        },
        {
            "message": "Missing item type\nP R O C E S S I N G . J S - 1.4.1\n    a port of the Processing visualization language\nProcessing.js is licensed under the MIT License, see LICENSE.\n    For a list of copyright holders, please refer to AUTHORS.\nhttp://processingjs.org",
            "line": " BotsEvolved/js/vendor/processing-1.4.1.js:1"
        },
        {
            "message": "Missing item type\nNode creator. You should never create a node manually. the algorithm takes\ncare of that for you.",
            "line": " BotsEvolved/js/vendor/quadtree.js:46"
        },
        {
            "message": "Missing item type\niterates all items that match the selector and invokes the supplied callback on them.",
            "line": " BotsEvolved/js/vendor/quadtree.js:64"
        },
        {
            "message": "Missing item type\nAdds a new Item to the node.\n\nIf the node already has subnodes, the item gets pushed down one level.\nIf the item does not fit into the subnodes, it gets saved in the\n\"children\"-array.\n\nIf the maxChildren limit is exceeded after inserting the item,\nthe node gets divided and all items inside the \"children\"-array get\npushed down to the new subnodes.",
            "line": " BotsEvolved/js/vendor/quadtree.js:80"
        },
        {
            "message": "Missing item type\nFind a node the item should be inserted in.",
            "line": " BotsEvolved/js/vendor/quadtree.js:114"
        },
        {
            "message": "Missing item type\nFinds the regions the item overlaps with. See constants defined\nabove. The callback is called for every region the item overlaps.",
            "line": " BotsEvolved/js/vendor/quadtree.js:135"
        },
        {
            "message": "Missing item type\nDivides the current node into four subnodes and adds them\nto the nodes array of the current node. Then reinserts all\nchildren.",
            "line": " BotsEvolved/js/vendor/quadtree.js:152"
        },
        {
            "message": "Missing item type\nClears the node and all its subnodes.",
            "line": " BotsEvolved/js/vendor/quadtree.js:181"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/require.js:1"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "line": " BotsEvolved/js/vendor/require.js:49"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "line": " BotsEvolved/js/vendor/require.js:64"
        },
        {
            "message": "Missing item type\nCycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "line": " BotsEvolved/js/vendor/require.js:87"
        },
        {
            "message": "Missing item type\nSimple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "line": " BotsEvolved/js/vendor/require.js:103"
        },
        {
            "message": "Missing item type\nConstructs an error with a pointer to an URL with more information.",
            "line": " BotsEvolved/js/vendor/require.js:154"
        },
        {
            "message": "Missing item type\nTrims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "line": " BotsEvolved/js/vendor/require.js:220"
        },
        {
            "message": "Missing item type\nGiven a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "line": " BotsEvolved/js/vendor/require.js:253"
        },
        {
            "message": "Missing item type\nCreates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "line": " BotsEvolved/js/vendor/require.js:399"
        },
        {
            "message": "Missing item type\nInternal method to transfer globalQueue items to this context's\ndefQueue.",
            "line": " BotsEvolved/js/vendor/require.js:541"
        },
        {
            "message": "Missing item type\nChecks if the module is ready to define itself, and if so,\ndefine it.",
            "line": " BotsEvolved/js/vendor/require.js:829"
        },
        {
            "message": "Missing item type\nGiven an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "line": " BotsEvolved/js/vendor/require.js:1188"
        },
        {
            "message": "Missing item type\nSet a configuration for the context.",
            "line": " BotsEvolved/js/vendor/require.js:1241"
        },
        {
            "message": "Missing item type\nConverts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "line": " BotsEvolved/js/vendor/require.js:1425"
        },
        {
            "message": "Missing item type\nCalled to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "line": " BotsEvolved/js/vendor/require.js:1487"
        },
        {
            "message": "Missing item type\nInternal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "line": " BotsEvolved/js/vendor/require.js:1500"
        },
        {
            "message": "Missing item type\nConverts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "line": " BotsEvolved/js/vendor/require.js:1556"
        },
        {
            "message": "Missing item type\nExecutes a module callback function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "line": " BotsEvolved/js/vendor/require.js:1627"
        },
        {
            "message": "Missing item type\ncallback for script loads, used to check status of loading.",
            "line": " BotsEvolved/js/vendor/require.js:1638"
        },
        {
            "message": "Missing item type\nCallback for script errors.",
            "line": " BotsEvolved/js/vendor/require.js:1660"
        },
        {
            "message": "Missing item type\nMain entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "line": " BotsEvolved/js/vendor/require.js:1675"
        },
        {
            "message": "Missing item type\nSupport require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "line": " BotsEvolved/js/vendor/require.js:1725"
        },
        {
            "message": "Missing item type\nExecute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "line": " BotsEvolved/js/vendor/require.js:1733"
        },
        {
            "message": "Missing item type\nExport require as a global, but only if it does not already exist.",
            "line": " BotsEvolved/js/vendor/require.js:1743"
        },
        {
            "message": "Missing item type\nAny errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "line": " BotsEvolved/js/vendor/require.js:1790"
        },
        {
            "message": "Missing item type\nDoes the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "line": " BotsEvolved/js/vendor/require.js:1797"
        },
        {
            "message": "Missing item type\nThe function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "line": " BotsEvolved/js/vendor/require.js:1958"
        },
        {
            "message": "Missing item type\nExecutes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "line": " BotsEvolved/js/vendor/require.js:2032"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:244"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:634"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:999"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:1318"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:2160"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:2733"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:2859"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:3121"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:3452"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:3677"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:4655"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:4821"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:4957"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:5110"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:5332"
        },
        {
            "message": "Missing item type\nSpline from Tween.js, slightly optimized (and trashed)\nhttp://sole.github.com/tween.js/examples/05_spline.html",
            "line": " BotsEvolved/js/vendor/three.js:5450"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:5626"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:5816"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:5826"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:5836"
        },
        {
            "message": "Missing item type\nhttps://github.com/mrdoob/eventdispatcher.js/",
            "line": " BotsEvolved/js/vendor/three.js:5908"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:5991"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:6231"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:6721"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:7389"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:7438"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:7488"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:8294"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:8848"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:8890"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:8917"
        },
        {
            "message": "Missing item type\nUses Focal Length (in mm) to estimate and set FOV\n35mm (fullframe) camera is used if frame size is not specified;\nFormula based on http://www.bobatkins.com/photography/technical/field_of_view.html",
            "line": " BotsEvolved/js/vendor/three.js:8939"
        },
        {
            "message": "Missing item type\nSets an offset in a larger frustum. This is useful for multi-window or\nmulti-monitor/multi-machine setups.\n\nFor example, if you have 3x2 monitors and each monitor is 1920x1080 and\nthe monitors are in grid like this\n\n  +---+---+---+\n  | A | B | C |\n  +---+---+---+\n  | D | E | F |\n  +---+---+---+\n\nthen for each monitor you would call it like this\n\n  var w = 1920;\n  var h = 1080;\n  var fullWidth = w * 3;\n  var fullHeight = h * 2;\n\n  --A--\n  camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n  --B--\n  camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n  --C--\n  camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n  --D--\n  camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n  --E--\n  camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n  --F--\n  camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\n  Note there is no reason monitors have to be the same size or in a grid.",
            "line": " BotsEvolved/js/vendor/three.js:8955"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9033"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9059"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9080"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9105"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9183"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9212"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9239"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9302"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9743"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:9787"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:10231"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:10276"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:10327"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:10454"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:11664"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:11711"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:11841"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:11902"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:11968"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12076"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12200"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12354"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12395"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12442"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12457"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12519"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12555"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12653"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12748"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12839"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12865"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12888"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12911"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12952"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:12990"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13086"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13143"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13394"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13590"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13614"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13716"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13758"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13869"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13890"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:13908"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:15227"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:18429"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25788"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25868"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25881"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25900"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25926"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25953"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25963"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25981"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:25996"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:26573"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:27126"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:27166"
        },
        {
            "message": "Missing item type\nThis code is a quick port of code written in C++ which was submitted to\nflipcode.com by John W. Ratcliff  // July 22, 2000\nSee original code and more information here:\nhttp://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\nported to actionscript by Zevan Rosser\nwww.actionsnippet.com\n\nported to javascript by Joshua Koo\nhttp://www.lab4games.net/zz85/blog",
            "line": " BotsEvolved/js/vendor/three.js:27431"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:27626"
        },
        {
            "message": "Missing item type\nAbstract Curve base class",
            "line": " BotsEvolved/js/vendor/three.js:27659"
        },
        {
            "message": "Missing item type\nLine",
            "line": " BotsEvolved/js/vendor/three.js:27891"
        },
        {
            "message": "Missing item type\nQuadratic Bezier curve",
            "line": " BotsEvolved/js/vendor/three.js:27929"
        },
        {
            "message": "Missing item type\nCubic Bezier curve",
            "line": " BotsEvolved/js/vendor/three.js:27974"
        },
        {
            "message": "Missing item type\nSpline curve",
            "line": " BotsEvolved/js/vendor/three.js:28015"
        },
        {
            "message": "Missing item type\nEllipse curve",
            "line": " BotsEvolved/js/vendor/three.js:28049"
        },
        {
            "message": "Missing item type\nArc curve",
            "line": " BotsEvolved/js/vendor/three.js:28091"
        },
        {
            "message": "Missing item type\nUtils",
            "line": " BotsEvolved/js/vendor/three.js:28103"
        },
        {
            "message": "Missing item type\n3D Curves",
            "line": " BotsEvolved/js/vendor/three.js:28156"
        },
        {
            "message": "Missing item type\nLine3D",
            "line": " BotsEvolved/js/vendor/three.js:28172"
        },
        {
            "message": "Missing item type\nQuadratic Bezier 3D curve",
            "line": " BotsEvolved/js/vendor/three.js:28201"
        },
        {
            "message": "Missing item type\nCubic Bezier 3D curve",
            "line": " BotsEvolved/js/vendor/three.js:28231"
        },
        {
            "message": "Missing item type\nSpline 3D curve",
            "line": " BotsEvolved/js/vendor/three.js:28262"
        },
        {
            "message": "Missing item type\nClosed Spline 3D curve",
            "line": " BotsEvolved/js/vendor/three.js:28334"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:28373"
        },
        {
            "message": "Missing item type\nCurved Path - a curve path is simply a array of connected\n  curves, but retains the api of a curve",
            "line": " BotsEvolved/js/vendor/three.js:28378"
        },
        {
            "message": "Missing item type\nCreate Geometries Helpers",
            "line": " BotsEvolved/js/vendor/three.js:28569"
        },
        {
            "message": "Missing item type\nBend / Wrap Helper Methods",
            "line": " BotsEvolved/js/vendor/three.js:28606"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:28698"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:28758"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:29312"
        },
        {
            "message": "Missing item type\nUtils",
            "line": " BotsEvolved/js/vendor/three.js:29431"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:29844"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:30102"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:30488"
        },
        {
            "message": "Missing item type\nCamera for rendering cube maps\n\t- renders scene into axis-aligned cube",
            "line": " BotsEvolved/js/vendor/three.js:30911"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:31225"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:31279"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:31391"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:31545"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32278"
        },
        {
            "message": "Missing item type\nAdd an array of shapes to THREE.ShapeGeometry.",
            "line": " BotsEvolved/js/vendor/three.js:32311"
        },
        {
            "message": "Missing item type\nAdds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.",
            "line": " BotsEvolved/js/vendor/three.js:32326"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32414"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32500"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32573"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32645"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32741"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32800"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32872"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:32981"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33261"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33483"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33512"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33530"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33549"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33637"
        },
        {
            "message": "Missing item type\nWhether the face is visible from the vertex",
            "line": " BotsEvolved/js/vendor/three.js:33738"
        },
        {
            "message": "Missing item type\nFace normal",
            "line": " BotsEvolved/js/vendor/three.js:33756"
        },
        {
            "message": "Missing item type\nDetect whether two edges are equal.\nNote that when constructing the convex hull, two same edges can only\nbe of the negative direction.",
            "line": " BotsEvolved/js/vendor/three.js:33774"
        },
        {
            "message": "Missing item type\nCreate a random offset between -1e-6 and 1e-6.",
            "line": " BotsEvolved/js/vendor/three.js:33785"
        },
        {
            "message": "Missing item type\nXXX: Not sure if this is the correct approach. Need someone to review.",
            "line": " BotsEvolved/js/vendor/three.js:33795"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33860"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33890"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:33982"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34066"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34253"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34306"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34335"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34379"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34450"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34507"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34520"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34609"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:34916"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:35219"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:35715"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:36020"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:36220"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/vendor/three.js:36407"
        },
        {
            "message": "Missing item type\nThe entry point to the application.",
            "line": " BotsEvolved/js/app.js:1"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/app.js:13"
        },
        {
            "message": "Missing item type",
            "line": " BotsEvolved/js/botMain.js:1"
        }
    ]
}